{"version":3,"sources":["reverseProxy.es6"],"names":[],"mappings":"AAAA;;AACA,QAAQ,QAAR;;AAEA,IAAI,iBAAiB,QAAQ,kBAAR,CAArB;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AACzB,QAAI,QAAQ,OAAO,IAAP,KAAgB,QAAxB,IAAoC,KAAK,QAAL,CAAc,QAAd,CAAxC,EAAiE;AAC7D,eAAO,EAAE,KAAK,CAAC,eAAe,wBAAhB,CAAP,EAAP;AACH;;AAED,WAAO,EAAE,KAAK,CAAC,eAAe,0BAAhB,CAAP,EAAP;AACH;;AAED,QAAQ,aAAR,GAAwB,aAAxB;;AAEA,SAAS,YAAT,GAAwB;AACpB,WAAO,QAAQ;AACX,cAAM,eAAe,gBADV;AAEX,gBAAQ,eAAe,cAFZ;AAGX,mBAAW,CAAC,aAAD;AAHA,KAAR,CAAP;AAKH;;AAED,QAAQ,YAAR,GAAuB,YAAvB","file":"reverseProxy.js","sourcesContent":["\"use strict\";\nrequire('bunyan');\n\nlet serverSettings = require(\"./serverSettings\");\nlet redbird = require('redbird');\n\nfunction proxyResolver(host) {\n    if (host && typeof host === 'string' && host.includes('.live.')) {\n        return { url: [serverSettings.liveContentServerAddress] };\n    }\n\n    return { url: [serverSettings.staticContentServerAddress] };\n}\n\nexports.proxyResolver = proxyResolver;\n\nfunction startRedbird() {\n    return redbird({\n        port: serverSettings.reverseProxyPort,\n        bunyan: serverSettings.loggerSettings,\n        resolvers: [proxyResolver]\n    });\n}\n\nexports.startRedbird = startRedbird;"]}