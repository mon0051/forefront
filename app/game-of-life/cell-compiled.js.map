{"version":3,"sources":["cell.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,OAAQ,YAAY;AACpB,aAAS,IAAT,GAAgB;AACZ,aAAK,SAAL,GAAiB,UAAU,MAAV,EAAkB;AAC/B,gBAAI,KAAK,MAAL,KAAgB,OAApB,EAA6B;AACzB,qBAAK,MAAL,GAAc,SAAd;AACA;AACH;AACD,gBAAI,KAAK,MAAL,KAAgB,SAApB,EAA+B;AAC3B,qBAAK,MAAL,GAAc,OAAd;AACA;AACH;AACD,iBAAK,uBAAL,CAA6B,KAAK,aAAL,CAAmB,MAAnB,CAA7B,EACK,kBADL;AAEH,SAXD;AAYA,aAAK,OAAL,GAAe,YAAY;AACvB,iBAAK,MAAL,GAAc,OAAd;AACH,SAFD;AAGA,aAAK,MAAL,GAAc,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AAChC,mBAAO,KAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,EAAuB,CAAC,IAAD,EAAO,MAAP,CAAc,IAAd,CAAvB,CAAP;AACH,SAFD;AAGA,aAAK,aAAL,GAAqB,UAAU,MAAV,EAAkB;AACnC,gBAAI,aAAa,EAAjB;AACA,iBAAK,IAAI,IAAI,CAAC,CAAd,EAAiB,KAAK,CAAtB,EAAyB,GAAzB,EAA8B;AAC1B,qBAAK,IAAI,IAAI,CAAC,CAAd,EAAiB,KAAK,CAAtB,EAAyB,GAAzB,EAA8B;AAC1B,wBAAI,MAAM,CAAN,IAAW,MAAM,CAArB,EACI;AACJ,+BAAW,WAAW,MAAtB,IAAgC,KAAK,WAAL,CAAiB,MAAjB,EAAyB,CAAzB,EAA4B,CAA5B,CAAhC;AACH;AACJ;AACD,mBAAO,WAAW,MAAX,CAAkB,UAAU,CAAV,EAAa;AAAE,uBAAQ,CAAR;AAAa,aAA9C,CAAP;AACH,SAVD;AAWA,aAAK,WAAL,GAAmB,UAAU,MAAV,EAAkB,OAAlB,EAA2B,OAA3B,EAAoC;AACnD,gBAAI,YAAY,KAAK,CAAL,GAAS,OAAzB;AACA,gBAAI,YAAY,KAAK,CAAL,GAAS,OAAzB;AACA,gBAAI,OAAO,SAAP,CAAJ,EAAuB;AACnB,uBAAO,OAAO,SAAP,EAAkB,SAAlB,CAAP;AACH;AACD,mBAAO,SAAP;AACH,SAPD;AAQA,aAAK,uBAAL,GAA+B,UAAU,UAAV,EAAsB;AACjD,gBAAI,OAAO,IAAX;AACA,gBAAI,mBAAmB,CAAvB;AACA,gBAAI,aAAa;AACb,mBAAG,QADU;AAEb,mBAAG;AAFU,aAAjB;AAIA;AACA,uBAAW,OAAX,CAAmB,UAAU,IAAV,EAAgB;AAC/B,oBAAI,KAAK,MAAL,KAAgB,OAAhB,IAA2B,KAAK,MAAL,KAAgB,OAA/C,EAAwD;AACpD,wCAAoB,CAApB;AACH;AACJ,aAJD;AAKA,iBAAK,gBAAL,GAAwB,gBAAxB;AACA,iBAAK,WAAL,GAAmB,WAAW,gBAAX,KAAgC,OAAnD;AACA,mBAAO,IAAP;AACH,SAhBD;AAiBA,aAAK,kBAAL,GAA0B,YAAY;AAClC,gBAAI,KAAK,WAAL,KAAqB,QAAzB,EAAmC;AAC/B,uBAAO,IAAP;AACH;AACD,gBAAI,KAAK,MAAL,KAAgB,SAAhB,IAA6B,KAAK,WAAL,KAAqB,SAAtD,EAAiE;AAC7D,qBAAK,MAAL,GAAc,SAAd;AACH;AACD,gBAAI,KAAK,MAAL,KAAgB,OAAhB,IAA2B,KAAK,WAAL,KAAqB,OAApD,EAA6D;AACzD,qBAAK,MAAL,GAAc,OAAd;AACH;AACD,mBAAO,IAAP;AACH,SAXD;AAYH;AACD,WAAO,IAAP;AACH,CAtEW,EAAZ;AAuEA,QAAQ,IAAR,GAAe,IAAf;AACA","file":"cell-compiled.js","sourcesContent":["\"use strict\";\r\nvar Cell = (function () {\r\n    function Cell() {\r\n        this.cycleLife = function (matrix) {\r\n            if (this.status === \"dying\") {\r\n                this.status = \"dormant\";\r\n                return;\r\n            }\r\n            if (this.status === \"growing\") {\r\n                this.status = \"alive\";\r\n                return;\r\n            }\r\n            this.updateEnvironmentStatus(this.getNeighbours(matrix))\r\n                .updateHealthStatus();\r\n        };\r\n        this.animate = function () {\r\n            this.status = \"alive\";\r\n        };\r\n        this.digest = function (func, args) {\r\n            return func.apply.apply(func, [this].concat(args));\r\n        };\r\n        this.getNeighbours = function (matrix) {\r\n            var neighbours = [];\r\n            for (var i = -1; i <= 1; i++) {\r\n                for (var j = -1; j <= 1; j++) {\r\n                    if (i === 0 && j === 0)\r\n                        continue;\r\n                    neighbours[neighbours.length] = this.getRelative(matrix, i, j);\r\n                }\r\n            }\r\n            return neighbours.filter(function (x) { return (x); });\r\n        };\r\n        this.getRelative = function (matrix, offsetY, offsetX) {\r\n            var relativeX = this.x + offsetX;\r\n            var relativeY = this.y + offsetY;\r\n            if (matrix[relativeY]) {\r\n                return matrix[relativeY][relativeX];\r\n            }\r\n            return undefined;\r\n        };\r\n        this.updateEnvironmentStatus = function (neighbours) {\r\n            var that = this;\r\n            var livingNeighbours = 0;\r\n            var environMap = {\r\n                2: \"stable\",\r\n                3: \"perfect\"\r\n            };\r\n            //this.livingNeighbours = neighbours.filter((value:Cell)=>(value.status===\"alive\"||value.status===\"dying\")).length;\r\n            neighbours.forEach(function (cell) {\r\n                if (cell.status === \"alive\" || cell.status === \"dying\") {\r\n                    livingNeighbours += 1;\r\n                }\r\n            });\r\n            this.livingNeighbours = livingNeighbours;\r\n            this.environment = environMap[livingNeighbours] || \"toxic\";\r\n            return that;\r\n        };\r\n        this.updateHealthStatus = function () {\r\n            if (this.environment === \"stable\") {\r\n                return this;\r\n            }\r\n            if (this.status === \"dormant\" && this.environment === \"perfect\") {\r\n                this.status = \"growing\";\r\n            }\r\n            if (this.status === \"alive\" && this.environment === \"toxic\") {\r\n                this.status = \"dying\";\r\n            }\r\n            return this;\r\n        };\r\n    }\r\n    return Cell;\r\n}());\r\nexports.Cell = Cell;\r\n//# sourceMappingURL=cell.js.map"]}