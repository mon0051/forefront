{"version":3,"sources":["model.js"],"names":[],"mappings":"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","file":"model-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar shared_1 = require('./directives/shared');\nvar async_1 = require('./facade/async');\nvar collection_1 = require('./facade/collection');\nvar lang_1 = require('./facade/lang');\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nexports.VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nexports.INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nexports.PENDING = 'PENDING';\nfunction isControl(control) {\n    return control instanceof AbstractControl;\n}\nexports.isControl = isControl;\nfunction _find(control, path) {\n    if (lang_1.isBlank(path))\n        return null;\n    if (!(path instanceof Array)) {\n        path = path.split('/');\n    }\n    if (path instanceof Array && collection_1.ListWrapper.isEmpty(path))\n        return null;\n    return path.reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return lang_1.isPresent(v.controls[name]) ? v.controls[name] : null;\n        }\n        else if (v instanceof FormArray) {\n            var index = name;\n            return lang_1.isPresent(v.at(index)) ? v.at(index) : null;\n        }\n        else {\n            return null;\n        }\n    }, control);\n}\nfunction toObservable(r) {\n    return lang_1.isPromise(r) ? async_1.ObservableWrapper.fromPromise(r) : r;\n}\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? shared_1.composeValidators(validator) : validator;\n}\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? shared_1.composeAsyncValidators(asyncValidator) : asyncValidator;\n}\n/**\n * @experimental\n */\nvar AbstractControl = (function () {\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        this._pristine = true;\n        this._touched = false;\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        get: function () { return this._status === exports.VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns the errors of this control.\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        get: function () { return this._status == exports.PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    AbstractControl.prototype.markAsTouched = function () { this._touched = true; };\n    AbstractControl.prototype.markAsDirty = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        this._pristine = false;\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsDirty({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsPending = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        this._status = exports.PENDING;\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsPending({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    AbstractControl.prototype.updateValueAndValidity = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;\n        this._updateValue();\n        this._errors = this._runValidator();\n        this._status = this._calculateStatus();\n        if (this._status == exports.VALID || this._status == exports.PENDING) {\n            this._runAsyncValidator(emitEvent);\n        }\n        if (emitEvent) {\n            async_1.ObservableWrapper.callEmit(this._valueChanges, this._value);\n            async_1.ObservableWrapper.callEmit(this._statusChanges, this._status);\n        }\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        }\n    };\n    AbstractControl.prototype._runValidator = function () {\n        return lang_1.isPresent(this.validator) ? this.validator(this) : null;\n    };\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (lang_1.isPresent(this.asyncValidator)) {\n            this._status = exports.PENDING;\n            this._cancelExistingSubscription();\n            var obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = async_1.ObservableWrapper.subscribe(obs, function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); });\n        }\n    };\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (lang_1.isPresent(this._asyncValidationSubscription)) {\n            async_1.ObservableWrapper.dispose(this._asyncValidationSubscription);\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run not automatically, but manually by the user.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ## Usage\n     *\n     * ```\n     * var login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.updateValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    AbstractControl.prototype.setErrors = function (errors, _a) {\n        var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n        emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;\n        this._errors = errors;\n        this._updateControlsErrors(emitEvent);\n    };\n    AbstractControl.prototype.find = function (path) { return _find(this, path); };\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        var control = lang_1.isPresent(path) && !collection_1.ListWrapper.isEmpty(path) ? this.find(path) : this;\n        if (lang_1.isPresent(control) && lang_1.isPresent(control._errors)) {\n            return collection_1.StringMapWrapper.get(control._errors, errorCode);\n        }\n        else {\n            return null;\n        }\n    };\n    AbstractControl.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return lang_1.isPresent(this.getError(errorCode, path));\n    };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        get: function () {\n            var x = this;\n            while (lang_1.isPresent(x._parent)) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            async_1.ObservableWrapper.callEmit(this._statusChanges, this._status);\n        }\n        if (lang_1.isPresent(this._parent)) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new async_1.EventEmitter();\n        this._statusChanges = new async_1.EventEmitter();\n    };\n    AbstractControl.prototype._calculateStatus = function () {\n        if (lang_1.isPresent(this._errors))\n            return exports.INVALID;\n        if (this._anyControlsHaveStatus(exports.PENDING))\n            return exports.PENDING;\n        if (this._anyControlsHaveStatus(exports.INVALID))\n            return exports.INVALID;\n        return exports.VALID;\n    };\n    return AbstractControl;\n}());\nexports.AbstractControl = AbstractControl;\n/**\n * Defines a part of a form that cannot be divided into other controls. `FormControl`s have values\n * and\n * validation state, which is determined by an optional validation function.\n *\n * `FormControl` is one of the three fundamental building blocks used to define forms in Angular,\n * along\n * with {@link FormGroup} and {@link FormArray}.\n *\n * ## Usage\n *\n * By default, a `FormControl` is created for every `<input>` or other form component.\n * With {@link FormControlDirective} or {@link FormGroupDirective} an existing {@link FormControl}\n * can be bound to a DOM element instead. This `FormControl` can be configured with a custom\n * validation function.\n *\n * @experimental\n */\nvar FormControl = (function (_super) {\n    __extends(FormControl, _super);\n    function FormControl(value, validator, asyncValidator) {\n        if (value === void 0) { value = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n        /** @internal */\n        this._onChange = [];\n        this._value = value;\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. If `emitEvent` is `true`, this change will cause a\n     * `valueChanges` event on the `FormControl` to be emitted. Both of these options default to\n     * `false`.\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     */\n    FormControl.prototype.updateValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange;\n        emitModelToViewChange = lang_1.isPresent(emitModelToViewChange) ? emitModelToViewChange : true;\n        this._value = value;\n        if (this._onChange.length && emitModelToViewChange) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value); });\n        }\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * @internal\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * @internal\n     */\n    FormControl.prototype._anyControlsHaveStatus = function (status) { return false; };\n    /**\n     * Register a listener for change events.\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    return FormControl;\n}(AbstractControl));\nexports.FormControl = FormControl;\n/**\n * Defines a part of a form, of fixed length, that can contain other controls.\n *\n * A `FormGroup` aggregates the values of each {@link FormControl} in the group.\n * The status of a `FormGroup` depends on the status of its children.\n * If one of the controls in a group is invalid, the entire group is invalid.\n * Similarly, if a control changes its value, the entire group changes as well.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {@link FormControl} and {@link FormArray}. {@link FormArray} can also contain other\n * controls, but is of variable length.\n *\n * ### Example ([live demo](http://plnkr.co/edit/23DESOpbNnBpBHZt1BR4?p=preview))\n *\n * @experimental\n */\nvar FormGroup = (function (_super) {\n    __extends(FormGroup, _super);\n    function FormGroup(controls, optionals, validator, asyncValidator) {\n        if (optionals === void 0) { optionals = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, validator, asyncValidator);\n        this.controls = controls;\n        this._optionals = lang_1.isPresent(optionals) ? optionals : {};\n        this._initObservables();\n        this._setParentForControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Register a control with the group's list of controls.\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove a control from this group.\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        collection_1.StringMapWrapper.delete(this.controls, name);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Mark the named control as non-optional.\n     */\n    FormGroup.prototype.include = function (controlName) {\n        collection_1.StringMapWrapper.set(this._optionals, controlName, true);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Mark the named control as optional.\n     */\n    FormGroup.prototype.exclude = function (controlName) {\n        collection_1.StringMapWrapper.set(this._optionals, controlName, false);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Check whether there is a control with the given name in the group.\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        var c = collection_1.StringMapWrapper.contains(this.controls, controlName);\n        return c && this._included(controlName);\n    };\n    /** @internal */\n    FormGroup.prototype._setParentForControls = function () {\n        var _this = this;\n        collection_1.StringMapWrapper.forEach(this.controls, function (control, name) { control.setParent(_this); });\n    };\n    /** @internal */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /** @internal */\n    FormGroup.prototype._anyControlsHaveStatus = function (status) {\n        var _this = this;\n        var res = false;\n        collection_1.StringMapWrapper.forEach(this.controls, function (control, name) {\n            res = res || (_this.contains(name) && control.status == status);\n        });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._reduceValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control.value;\n            return acc;\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var _this = this;\n        var res = initValue;\n        collection_1.StringMapWrapper.forEach(this.controls, function (control, name) {\n            if (_this._included(name)) {\n                res = fn(res, control, name);\n            }\n        });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._included = function (controlName) {\n        var isOptional = collection_1.StringMapWrapper.contains(this._optionals, controlName);\n        return !isOptional || collection_1.StringMapWrapper.get(this._optionals, controlName);\n    };\n    return FormGroup;\n}(AbstractControl));\nexports.FormGroup = FormGroup;\n/**\n * Defines a part of a form, of variable length, that can contain other controls.\n *\n * A `FormArray` aggregates the values of each {@link FormControl} in the group.\n * The status of a `FormArray` depends on the status of its children.\n * If one of the controls in a group is invalid, the entire array is invalid.\n * Similarly, if a control changes its value, the entire array changes as well.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {@link FormControl} and {@link FormGroup}. {@link FormGroup} can also contain\n * other controls, but is of fixed length.\n *\n * ## Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * ### Example ([live demo](http://plnkr.co/edit/23DESOpbNnBpBHZt1BR4?p=preview))\n *\n * @experimental\n */\nvar FormArray = (function (_super) {\n    __extends(FormArray, _super);\n    function FormArray(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, validator, asyncValidator);\n        this.controls = controls;\n        this._initObservables();\n        this._setParentForControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the {@link AbstractControl} at the given `index` in the array.\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {@link AbstractControl} at the end of the array.\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        control.setParent(this);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Insert a new {@link AbstractControl} at the given `index` in the array.\n     */\n    FormArray.prototype.insert = function (index, control) {\n        collection_1.ListWrapper.insert(this.controls, index, control);\n        control.setParent(this);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     */\n    FormArray.prototype.removeAt = function (index) {\n        collection_1.ListWrapper.removeAt(this.controls, index);\n        this.updateValueAndValidity();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    FormArray.prototype._updateValue = function () { this._value = this.controls.map(function (control) { return control.value; }); };\n    /** @internal */\n    FormArray.prototype._anyControlsHaveStatus = function (status) {\n        return this.controls.some(function (c) { return c.status == status; });\n    };\n    /** @internal */\n    FormArray.prototype._setParentForControls = function () {\n        var _this = this;\n        this.controls.forEach(function (control) { control.setParent(_this); });\n    };\n    return FormArray;\n}(AbstractControl));\nexports.FormArray = FormArray;\n//# sourceMappingURL=model.js.map"]}