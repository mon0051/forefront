{"version":3,"sources":["validators.js"],"names":[],"mappings":"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","file":"validators-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar async_1 = require('./facade/async');\nvar collection_1 = require('./facade/collection');\nvar lang_1 = require('./facade/lang');\nvar promise_1 = require('./facade/promise');\n/**\n * Providers for validators to be used for {@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n * @experimental\n */\nexports.NG_VALIDATORS = new core_1.OpaqueToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {@link NG_VALIDATORS} for more details.\n *\n * @experimental\n */\nexports.NG_ASYNC_VALIDATORS = \n/*@ts2dart_const*/ new core_1.OpaqueToken('NgAsyncValidators');\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * @experimental\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a non-empty value.\n     */\n    Validators.required = function (control) {\n        return lang_1.isBlank(control.value) || (lang_1.isString(control.value) && control.value == '') ?\n            { 'required': true } :\n            null;\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (lang_1.isPresent(Validators.required(control)))\n                return null;\n            var v = control.value;\n            return v.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': v.length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            if (lang_1.isPresent(Validators.required(control)))\n                return null;\n            var v = control.value;\n            return v.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': v.length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     */\n    Validators.pattern = function (pattern) {\n        return function (control) {\n            if (lang_1.isPresent(Validators.required(control)))\n                return null;\n            var regex = new RegExp(\"^\" + pattern + \"$\");\n            var v = control.value;\n            return regex.test(v) ? null :\n                { 'pattern': { 'requiredPattern': \"^\" + pattern + \"$\", 'actualValue': v } };\n        };\n    };\n    /**\n     * No-op validator.\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * Compose multiple validators into a single function that returns the union\n     * of the individual error maps.\n     */\n    Validators.compose = function (validators) {\n        if (lang_1.isBlank(validators))\n            return null;\n        var presentValidators = validators.filter(lang_1.isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    Validators.composeAsync = function (validators) {\n        if (lang_1.isBlank(validators))\n            return null;\n        var presentValidators = validators.filter(lang_1.isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n            return promise_1.PromiseWrapper.all(promises).then(_mergeErrors);\n        };\n    };\n    return Validators;\n}());\nexports.Validators = Validators;\nfunction _convertToPromise(obj) {\n    return lang_1.isPromise(obj) ? obj : async_1.ObservableWrapper.toPromise(obj);\n}\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _mergeErrors(arrayOfErrors) {\n    var res = arrayOfErrors.reduce(function (res, errors) {\n        return lang_1.isPresent(errors) ? collection_1.StringMapWrapper.merge(res, errors) : res;\n    }, {});\n    return collection_1.StringMapWrapper.isEmpty(res) ? null : res;\n}\n//# sourceMappingURL=validators.js.map"]}