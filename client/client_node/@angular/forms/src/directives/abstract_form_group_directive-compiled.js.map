{"version":3,"sources":["abstract_form_group_directive.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,YAAa,aAAQ,UAAK,SAAd,IAA4B,UAAU,CAAV,EAAa,CAAb,EAAgB;AACxD,SAAK,IAAI,CAAT,IAAc,CAAd;AAAiB,YAAI,EAAE,cAAF,CAAiB,CAAjB,CAAJ,EAAyB,EAAE,CAAF,IAAO,EAAE,CAAF,CAAP;AAA1C,KACA,SAAS,EAAT,GAAc;AAAE,aAAK,WAAL,GAAmB,CAAnB;AAAuB;AACvC,MAAE,SAAF,GAAc,MAAM,IAAN,GAAa,OAAO,MAAP,CAAc,CAAd,CAAb,IAAiC,GAAG,SAAH,GAAe,EAAE,SAAjB,EAA4B,IAAI,EAAJ,EAA7D,CAAd;AACH,CAJD;AAKA,IAAI,sBAAsB,QAAQ,qBAAR,CAA1B;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA;;;AAGA,IAAI,6BAA8B,UAAU,MAAV,EAAkB;AAChD,cAAU,0BAAV,EAAsC,MAAtC;AACA,aAAS,0BAAT,GAAsC;AAClC,eAAO,KAAP,CAAa,IAAb,EAAmB,SAAnB;AACH;AACD,+BAA2B,SAA3B,CAAqC,QAArC,GAAgD,YAAY;AAAE,aAAK,aAAL,CAAmB,YAAnB,CAAgC,IAAhC;AAAwC,KAAtG;AACA,+BAA2B,SAA3B,CAAqC,WAArC,GAAmD,YAAY;AAAE,aAAK,aAAL,CAAmB,eAAnB,CAAmC,IAAnC;AAA2C,KAA5G;AACA,WAAO,cAAP,CAAsB,2BAA2B,SAAjD,EAA4D,SAA5D,EAAuE;AACnE;;;AAGA,aAAK,eAAY;AAAE,mBAAO,KAAK,aAAL,CAAmB,YAAnB,CAAgC,IAAhC,CAAP;AAA+C,SAJC;AAKnE,oBAAY,IALuD;AAMnE,sBAAc;AANqD,KAAvE;AAQA,WAAO,cAAP,CAAsB,2BAA2B,SAAjD,EAA4D,MAA5D,EAAoE;AAChE;;;AAGA,aAAK,eAAY;AAAE,mBAAO,SAAS,WAAT,CAAqB,KAAK,IAA1B,EAAgC,KAAK,OAArC,CAAP;AAAuD,SAJV;AAKhE,oBAAY,IALoD;AAMhE,sBAAc;AANkD,KAApE;AAQA,WAAO,cAAP,CAAsB,2BAA2B,SAAjD,EAA4D,eAA5D,EAA6E;AACzE;;;AAGA,aAAK,eAAY;AAAE,mBAAO,KAAK,OAAL,CAAa,aAApB;AAAoC,SAJkB;AAKzE,oBAAY,IAL6D;AAMzE,sBAAc;AAN2D,KAA7E;AAQA,WAAO,cAAP,CAAsB,2BAA2B,SAAjD,EAA4D,WAA5D,EAAyE;AACrE,aAAK,eAAY;AAAE,mBAAO,SAAS,iBAAT,CAA2B,KAAK,WAAhC,CAAP;AAAsD,SADJ;AAErE,oBAAY,IAFyD;AAGrE,sBAAc;AAHuD,KAAzE;AAKA,WAAO,cAAP,CAAsB,2BAA2B,SAAjD,EAA4D,gBAA5D,EAA8E;AAC1E,aAAK,eAAY;AAAE,mBAAO,SAAS,sBAAT,CAAgC,KAAK,gBAArC,CAAP;AAAgE,SADT;AAE1E,oBAAY,IAF8D;AAG1E,sBAAc;AAH4D,KAA9E;AAKA,WAAO,0BAAP;AACH,CA1CiC,CA0ChC,oBAAoB,gBA1CY,CAAlC;AA2CA,QAAQ,0BAAR,GAAqC,0BAArC;AACA","file":"abstract_form_group_directive-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar control_container_1 = require('./control_container');\nvar shared_1 = require('./shared');\n/**\n  This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        _super.apply(this, arguments);\n    }\n    AbstractFormGroupDirective.prototype.ngOnInit = function () { this.formDirective.addFormGroup(this); };\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () { this.formDirective.removeFormGroup(this); };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {@link FormGroup} backing this binding.\n         */\n        get: function () { return this.formDirective.getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         */\n        get: function () { return shared_1.controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {@link Form} to which this group belongs.\n         */\n        get: function () { return this._parent.formDirective; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        get: function () { return shared_1.composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        get: function () { return shared_1.composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractFormGroupDirective;\n}(control_container_1.ControlContainer));\nexports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n//# sourceMappingURL=abstract_form_group_directive.js.map"]}