{"version":3,"sources":["checkbox_value_accessor.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,2BAA2B,QAAQ,0BAAR,CAA/B;AACA,QAAQ,uBAAR,GAAkC;AAC9B,aAAS,yBAAyB,iBADJ;AAE9B,iBAAa,OAAO,UAAP,CAAkB,YAAY;AAAE,eAAO,4BAAP;AAAsC,KAAtE,CAFiB;AAG9B,WAAO;AAHuB,CAAlC;AAKA,IAAI,+BAAgC,YAAY;AAC5C,aAAS,4BAAT,CAAsC,SAAtC,EAAiD,WAAjD,EAA8D;AAC1D,aAAK,SAAL,GAAiB,SAAjB;AACA,aAAK,WAAL,GAAmB,WAAnB;AACA,aAAK,QAAL,GAAgB,UAAU,CAAV,EAAa,CAAG,CAAhC;AACA,aAAK,SAAL,GAAiB,YAAY,CAAG,CAAhC;AACH;AACD,iCAA6B,SAA7B,CAAuC,UAAvC,GAAoD,UAAU,KAAV,EAAiB;AACjE,aAAK,SAAL,CAAe,kBAAf,CAAkC,KAAK,WAAL,CAAiB,aAAnD,EAAkE,SAAlE,EAA6E,KAA7E;AACH,KAFD;AAGA,iCAA6B,SAA7B,CAAuC,gBAAvC,GAA0D,UAAU,EAAV,EAAc;AAAE,aAAK,QAAL,GAAgB,EAAhB;AAAqB,KAA/F;AACA,iCAA6B,SAA7B,CAAuC,iBAAvC,GAA2D,UAAU,EAAV,EAAc;AAAE,aAAK,SAAL,GAAiB,EAAjB;AAAsB,KAAjG;AACA;AACA,iCAA6B,UAA7B,GAA0C,CACtC,EAAE,MAAM,OAAO,SAAf,EAA0B,MAAM,CAAC;AACrB,sBAAU,uGADW;AAErB,kBAAM,EAAE,YAAY,iCAAd,EAAiD,UAAU,aAA3D,EAFe;AAGrB,uBAAW,CAAC,QAAQ,uBAAT;AAHU,SAAD,CAAhC,EADsC,CAA1C;AAOA;AACA,iCAA6B,cAA7B,GAA8C,CAC1C,EAAE,MAAM,OAAO,QAAf,EAD0C,EAE1C,EAAE,MAAM,OAAO,UAAf,EAF0C,CAA9C;AAIA,WAAO,4BAAP;AACH,CA1BmC,EAApC;AA2BA,QAAQ,4BAAR,GAAuC,4BAAvC;AACA","file":"checkbox_value_accessor-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.CHECKBOX_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true\n};\nvar CheckboxControlValueAccessor = (function () {\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @nocollapse */\n    CheckboxControlValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [exports.CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxControlValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return CheckboxControlValueAccessor;\n}());\nexports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n//# sourceMappingURL=checkbox_value_accessor.js.map"]}