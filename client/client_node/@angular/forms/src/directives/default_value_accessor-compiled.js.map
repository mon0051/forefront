{"version":3,"sources":["default_value_accessor.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,2BAA2B,QAAQ,0BAAR,CAA/B;AACA,QAAQ,sBAAR;AACA,uBAAwB;AACpB,aAAS,yBAAyB,iBADd;AAEpB,iBAAa,OAAO,UAAP,CAAkB,YAAY;AAAE,eAAO,oBAAP;AAA8B,KAA9D,CAFO;AAGpB,WAAO;AAHa,CADxB;AAMA,IAAI,uBAAwB,YAAY;AACpC,aAAS,oBAAT,CAA8B,SAA9B,EAAyC,WAAzC,EAAsD;AAClD,aAAK,SAAL,GAAiB,SAAjB;AACA,aAAK,WAAL,GAAmB,WAAnB;AACA,aAAK,QAAL,GAAgB,UAAU,CAAV,EAAa,CAAG,CAAhC;AACA,aAAK,SAAL,GAAiB,YAAY,CAAG,CAAhC;AACH;AACD,yBAAqB,SAArB,CAA+B,UAA/B,GAA4C,UAAU,KAAV,EAAiB;AACzD,YAAI,kBAAkB,OAAO,OAAP,CAAe,KAAf,IAAwB,EAAxB,GAA6B,KAAnD;AACA,aAAK,SAAL,CAAe,kBAAf,CAAkC,KAAK,WAAL,CAAiB,aAAnD,EAAkE,OAAlE,EAA2E,eAA3E;AACH,KAHD;AAIA,yBAAqB,SAArB,CAA+B,gBAA/B,GAAkD,UAAU,EAAV,EAAc;AAAE,aAAK,QAAL,GAAgB,EAAhB;AAAqB,KAAvF;AACA,yBAAqB,SAArB,CAA+B,iBAA/B,GAAmD,UAAU,EAAV,EAAc;AAAE,aAAK,SAAL,GAAiB,EAAjB;AAAsB,KAAzF;AACA;AACA,yBAAqB,UAArB,GAAkC,CAC9B,EAAE,MAAM,OAAO,SAAf,EAA0B,MAAM,CAAC;AACrB,sBAAU,8MADW;AAErB;AACA;AACA;AACA,kBAAM,EAAE,WAAW,+BAAb,EAA8C,UAAU,aAAxD,EALe;AAMrB,uBAAW,CAAC,QAAQ,sBAAT;AANU,SAAD,CAAhC,EAD8B,CAAlC;AAUA;AACA,yBAAqB,cAArB,GAAsC,CAClC,EAAE,MAAM,OAAO,QAAf,EADkC,EAElC,EAAE,MAAM,OAAO,UAAf,EAFkC,CAAtC;AAIA,WAAO,oBAAP;AACH,CA9B2B,EAA5B;AA+BA,QAAQ,oBAAR,GAA+B,oBAA/B;AACA","file":"default_value_accessor-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.DEFAULT_VALUE_ACCESSOR = \n/* @ts2dart_Provider */ {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\nvar DefaultValueAccessor = (function () {\n    function DefaultValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = lang_1.isBlank(value) ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @nocollapse */\n    DefaultValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngControl],[ngModel],[ngFormControl]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [exports.DEFAULT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    DefaultValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return DefaultValueAccessor;\n}());\nexports.DefaultValueAccessor = DefaultValueAccessor;\n//# sourceMappingURL=default_value_accessor.js.map"]}