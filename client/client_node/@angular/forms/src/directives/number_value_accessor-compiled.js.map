{"version":3,"sources":["number_value_accessor.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,2BAA2B,QAAQ,0BAAR,CAA/B;AACA,QAAQ,qBAAR,GAAgC;AAC5B,aAAS,yBAAyB,iBADN;AAE5B,iBAAa,OAAO,UAAP,CAAkB,YAAY;AAAE,eAAO,mBAAP;AAA6B,KAA7D,CAFe;AAG5B,WAAO;AAHqB,CAAhC;AAKA,IAAI,sBAAuB,YAAY;AACnC,aAAS,mBAAT,CAA6B,SAA7B,EAAwC,WAAxC,EAAqD;AACjD,aAAK,SAAL,GAAiB,SAAjB;AACA,aAAK,WAAL,GAAmB,WAAnB;AACA,aAAK,QAAL,GAAgB,UAAU,CAAV,EAAa,CAAG,CAAhC;AACA,aAAK,SAAL,GAAiB,YAAY,CAAG,CAAhC;AACH;AACD,wBAAoB,SAApB,CAA8B,UAA9B,GAA2C,UAAU,KAAV,EAAiB;AACxD,aAAK,SAAL,CAAe,kBAAf,CAAkC,KAAK,WAAL,CAAiB,aAAnD,EAAkE,OAAlE,EAA2E,KAA3E;AACH,KAFD;AAGA,wBAAoB,SAApB,CAA8B,gBAA9B,GAAiD,UAAU,EAAV,EAAc;AAC3D,aAAK,QAAL,GAAgB,UAAU,KAAV,EAAiB;AAAE,eAAG,SAAS,EAAT,GAAc,IAAd,GAAqB,OAAO,aAAP,CAAqB,UAArB,CAAgC,KAAhC,CAAxB;AAAkE,SAArG;AACH,KAFD;AAGA,wBAAoB,SAApB,CAA8B,iBAA9B,GAAkD,UAAU,EAAV,EAAc;AAAE,aAAK,SAAL,GAAiB,EAAjB;AAAsB,KAAxF;AACA;AACA,wBAAoB,UAApB,GAAiC,CAC7B,EAAE,MAAM,OAAO,SAAf,EAA0B,MAAM,CAAC;AACrB,sBAAU,iGADW;AAErB,kBAAM;AACF,4BAAY,+BADV;AAEF,2BAAW,+BAFT;AAGF,0BAAU;AAHR,aAFe;AAOrB,uBAAW,CAAC,QAAQ,qBAAT;AAPU,SAAD,CAAhC,EAD6B,CAAjC;AAWA;AACA,wBAAoB,cAApB,GAAqC,CACjC,EAAE,MAAM,OAAO,QAAf,EADiC,EAEjC,EAAE,MAAM,OAAO,UAAf,EAFiC,CAArC;AAIA,WAAO,mBAAP;AACH,CAhC0B,EAA3B;AAiCA,QAAQ,mBAAR,GAA8B,mBAA9B;AACA","file":"number_value_accessor-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.NUMBER_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\nvar NumberValueAccessor = (function () {\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', value);\n    };\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : lang_1.NumberWrapper.parseFloat(value)); };\n    };\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @nocollapse */\n    NumberValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [exports.NUMBER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NumberValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return NumberValueAccessor;\n}());\nexports.NumberValueAccessor = NumberValueAccessor;\n//# sourceMappingURL=number_value_accessor.js.map"]}