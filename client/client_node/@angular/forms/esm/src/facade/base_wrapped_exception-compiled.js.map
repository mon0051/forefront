{"version":3,"sources":["base_wrapped_exception.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;AAOA;;;;;IAKa,oB,WAAA,oB;;;AACT,gCAAY,OAAZ,EAAqB;AAAA;;AAAA,mGACX,OADW;AAEpB;;;;wBACoB;AAAE,aAAO,EAAP;AAAY;;;wBAChB;AAAE,aAAO,IAAP;AAAc;;;wBACX;AAAE,aAAO,IAAP;AAAc;;;wBACpB;AAAE,aAAO,IAAP;AAAc;;;wBACtB;AAAE,aAAO,IAAP;AAAc;;;wBAChB;AAAE,aAAO,EAAP;AAAY;;;;EATU,K;AAW1C","file":"base_wrapped_exception-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A base class for the WrappedException that can be used to identify\n * a WrappedException from ExceptionHandler without adding circular\n * dependency.\n */\nexport class BaseWrappedException extends Error {\n    constructor(message) {\n        super(message);\n    }\n    get wrapperMessage() { return ''; }\n    get wrapperStack() { return null; }\n    get originalException() { return null; }\n    get originalStack() { return null; }\n    get context() { return null; }\n    get message() { return ''; }\n}\n//# sourceMappingURL=base_wrapped_exception.js.map"]}