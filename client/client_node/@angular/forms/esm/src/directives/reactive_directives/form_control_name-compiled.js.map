{"version":3,"sources":["form_control_name.js"],"names":[],"mappings":"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","file":"form_control_name-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Host, Inject, Input, Optional, Output, Self, SkipSelf, forwardRef } from '@angular/core';\nimport { EventEmitter, ObservableWrapper } from '../../facade/async';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../../validators';\nimport { ControlContainer } from '../control_container';\nimport { NG_VALUE_ACCESSOR } from '../control_value_accessor';\nimport { NgControl } from '../ng_control';\nimport { composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor } from '../shared';\nexport const controlNameBinding = \n/*@ts2dart_const*/ /* @ts2dart_Provider */ {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\nexport class FormControlName extends NgControl {\n    constructor(_parent, _validators, _asyncValidators, valueAccessors) {\n        super();\n        this._parent = _parent;\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this._added = false;\n        this.update = new EventEmitter();\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    ngOnChanges(changes) {\n        if (!this._added) {\n            this.formDirective.addControl(this);\n            this._added = true;\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    ngOnDestroy() { this.formDirective.removeControl(this); }\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        ObservableWrapper.callEmit(this.update, newValue);\n    }\n    get path() { return controlPath(this.name, this._parent); }\n    get formDirective() { return this._parent.formDirective; }\n    get validator() { return composeValidators(this._validators); }\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    get control() { return this.formDirective.getControl(this); }\n}\n/** @nocollapse */\nFormControlName.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/** @nocollapse */\nFormControlName.ctorParameters = [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n];\n/** @nocollapse */\nFormControlName.propDecorators = {\n    'name': [{ type: Input, args: ['formControlName',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n//# sourceMappingURL=form_control_name.js.map"]}