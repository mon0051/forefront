{"version":3,"sources":["form_group_directive.js"],"names":[],"mappings":";;;;;;;;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;+eAdA;;;;;;;;;AAeO,IAAM;AACb,kBADa,CACM,uBADN,gCAC8B;AACvC,gDADuC;AAEvC,iBAAa,sBAAW;AAAA,eAAM,kBAAN;AAAA,KAAX;AAF0B,CADpC;;IAKM,kB,WAAA,kB;;;AACT,gCAAY,WAAZ,EAAyB,gBAAzB,EAA2C;AAAA;;AAAA;;AAEvC,cAAK,WAAL,GAAmB,WAAnB;AACA,cAAK,gBAAL,GAAwB,gBAAxB;AACA,cAAK,UAAL,GAAkB,KAAlB;AACA,cAAK,UAAL,GAAkB,EAAlB;AACA,cAAK,IAAL,GAAY,IAAZ;AACA,cAAK,QAAL,GAAgB,yBAAhB;AAPuC;AAQ1C;;;;oCACW,O,EAAS;AACjB,iBAAK,iBAAL;AACA,gBAAI,6BAAiB,QAAjB,CAA0B,OAA1B,EAAmC,MAAnC,CAAJ,EAAgD;AAC5C,oBAAI,OAAO,+BAAkB,KAAK,WAAvB,CAAX;AACA,qBAAK,IAAL,CAAU,SAAV,GAAsB,wBAAW,OAAX,CAAmB,CAAC,KAAK,IAAL,CAAU,SAAX,EAAsB,IAAtB,CAAnB,CAAtB;AACA,oBAAI,QAAQ,oCAAuB,KAAK,gBAA5B,CAAZ;AACA,qBAAK,IAAL,CAAU,cAAV,GAA2B,wBAAW,YAAX,CAAwB,CAAC,KAAK,IAAL,CAAU,cAAX,EAA2B,KAA3B,CAAxB,CAA3B;AACA,qBAAK,IAAL,CAAU,sBAAV,CAAiC,EAAE,UAAU,IAAZ,EAAkB,WAAW,KAA7B,EAAjC;AACH;AACD,iBAAK,eAAL;AACH;;;mCAKU,G,EAAK;AACZ,gBAAM,OAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAb;AACA,sCAAa,IAAb,EAAmB,GAAnB;AACA,iBAAK,sBAAL,CAA4B,EAAE,WAAW,KAAb,EAA5B;AACA,iBAAK,UAAL,CAAgB,IAAhB,CAAqB,GAArB;AACH;;;mCACU,G,EAAK;AAAE,mBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAP;AAAkC;;;sCACtC,G,EAAK;AAAE,oCAAY,MAAZ,CAAmB,KAAK,UAAxB,EAAoC,GAApC;AAA2C;;;qCACnD,G,EAAK;AACd,gBAAI,OAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAX;AACA,4CAAmB,IAAnB,EAAyB,GAAzB;AACA,iBAAK,sBAAL,CAA4B,EAAE,WAAW,KAAb,EAA5B;AACH;;;wCACe,G,EAAK,CAAG;;;qCACX,G,EAAK;AAAE,mBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAP;AAAkC;;;qCACzC,G,EAAK;AACd,gBAAI,OAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAX;AACA,4CAAmB,IAAnB,EAAyB,GAAzB;AACA,iBAAK,sBAAL,CAA4B,EAAE,WAAW,KAAb,EAA5B;AACH;;;wCACe,G,EAAK,CAAG;;;qCACX,G,EAAK;AAAE,mBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAP;AAAkC;;;oCAC1C,G,EAAK,K,EAAO;AACpB,gBAAI,OAAO,KAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAX;AACA,iBAAK,WAAL,CAAiB,KAAjB;AACH;;;mCACU;AACP,iBAAK,UAAL,GAAkB,IAAlB;AACA,qCAAkB,QAAlB,CAA2B,KAAK,QAAhC,EAA0C,IAA1C;AACA,mBAAO,KAAP;AACH;AACD;;;;0CACkB;AAAA;;AACd,iBAAK,UAAL,CAAgB,OAAhB,CAAwB,eAAO;AAC3B,oBAAI,OAAO,OAAK,IAAL,CAAU,IAAV,CAAe,IAAI,IAAnB,CAAX;AACA,oBAAI,aAAJ,CAAkB,UAAlB,CAA6B,KAAK,KAAlC;AACH,aAHD;AAIH;;;4CACmB;AAChB,gBAAI,mBAAQ,KAAK,IAAb,CAAJ,EAAwB;AACpB,sBAAM,0JAAN;AAGH;AACJ;;;4BAhDe;AAAE,mBAAO,KAAK,UAAZ;AAAyB;;;4BACvB;AAAE,mBAAO,IAAP;AAAc;;;4BACtB;AAAE,mBAAO,KAAK,IAAZ;AAAmB;;;4BACxB;AAAE,mBAAO,EAAP;AAAY;;;;;AA+C7B;;;AACA,mBAAmB,UAAnB,GAAgC,CAC5B,EAAE,qBAAF,EAAmB,MAAM,CAAC;AACd,kBAAU,aADI;AAEd,mBAAW,CAAC,qBAAD,CAFG;AAGd,cAAM,EAAE,YAAY,YAAd,EAHQ;AAId,kBAAU;AAJI,KAAD,CAAzB,EAD4B,CAAhC;AAQA;AACA,mBAAmB,cAAnB,GAAoC,CAChC,EAAE,MAAM,KAAR,EAAe,YAAY,CAAC,EAAE,oBAAF,EAAD,EAAqB,EAAE,gBAAF,EAArB,EAAqC,EAAE,kBAAF,EAAgB,MAAM,4BAAtB,EAArC,CAA3B,EADgC,EAEhC,EAAE,MAAM,KAAR,EAAe,YAAY,CAAC,EAAE,oBAAF,EAAD,EAAqB,EAAE,gBAAF,EAArB,EAAqC,EAAE,kBAAF,EAAgB,MAAM,kCAAtB,EAArC,CAA3B,EAFgC,CAApC;AAIA;AACA,mBAAmB,cAAnB,GAAoC;AAChC,YAAQ,CAAC,EAAE,iBAAF,EAAe,MAAM,CAAC,WAAD,CAArB,EAAD,CADwB;AAEhC,gBAAY,CAAC,EAAE,kBAAF,EAAD;AAFoB,CAApC;AAIA","file":"form_group_directive-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Inject, Input, Optional, Output, Self, forwardRef } from '@angular/core';\nimport { EventEmitter, ObservableWrapper } from '../../facade/async';\nimport { ListWrapper, StringMapWrapper } from '../../facade/collection';\nimport { BaseException } from '../../facade/exceptions';\nimport { isBlank } from '../../facade/lang';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators } from '../../validators';\nimport { ControlContainer } from '../control_container';\nimport { composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer } from '../shared';\nexport const formDirectiveProvider = \n/*@ts2dart_const*/ /* @ts2dart_Provider */ {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\nexport class FormGroupDirective extends ControlContainer {\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this._submitted = false;\n        this.directives = [];\n        this.form = null;\n        this.ngSubmit = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (StringMapWrapper.contains(changes, 'form')) {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n            this.form.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        this._updateDomValue();\n    }\n    get submitted() { return this._submitted; }\n    get formDirective() { return this; }\n    get control() { return this.form; }\n    get path() { return []; }\n    addControl(dir) {\n        const ctrl = this.form.find(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n    }\n    getControl(dir) { return this.form.find(dir.path); }\n    removeControl(dir) { ListWrapper.remove(this.directives, dir); }\n    addFormGroup(dir) {\n        var ctrl = this.form.find(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    removeFormGroup(dir) { }\n    getFormGroup(dir) { return this.form.find(dir.path); }\n    addFormArray(dir) {\n        var ctrl = this.form.find(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    removeFormArray(dir) { }\n    getFormArray(dir) { return this.form.find(dir.path); }\n    updateModel(dir, value) {\n        var ctrl = this.form.find(dir.path);\n        ctrl.updateValue(value);\n    }\n    onSubmit() {\n        this._submitted = true;\n        ObservableWrapper.callEmit(this.ngSubmit, null);\n        return false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            var ctrl = this.form.find(dir.path);\n            dir.valueAccessor.writeValue(ctrl.value);\n        });\n    }\n    _checkFormPresent() {\n        if (isBlank(this.form)) {\n            throw new BaseException(`formGroup expects a FormGroup instance. Please pass one in.\n           Example: <form [formGroup]=\"myFormGroup\">\n      `);\n        }\n    }\n}\n/** @nocollapse */\nFormGroupDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/** @nocollapse */\nFormGroupDirective.ctorParameters = [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n];\n/** @nocollapse */\nFormGroupDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formGroup',] },],\n    'ngSubmit': [{ type: Output },],\n};\n//# sourceMappingURL=form_group_directive.js.map"]}