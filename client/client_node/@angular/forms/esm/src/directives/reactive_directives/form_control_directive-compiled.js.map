{"version":3,"sources":["form_control_directive.js"],"names":[],"mappings":";;;;;;;;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;+eAbA;;;;;;;;;AAcO,IAAM;AACb,kBADa,CACM,uBADN,6BAC8B;AACvC,kCADuC;AAEvC,iBAAa,sBAAW;AAAA,eAAM,oBAAN;AAAA,KAAX;AAF0B,CADpC;;IAKM,oB,WAAA,oB;;;AACT,kCAAY,WAAZ,EAAyB,gBAAzB,EAA2C,cAA3C,EAA2D;AAAA;;AAAA;;AAEvD,cAAK,WAAL,GAAmB,WAAnB;AACA,cAAK,gBAAL,GAAwB,gBAAxB;AACA,cAAK,MAAL,GAAc,yBAAd;AACA,cAAK,aAAL,GAAqB,wCAA0B,cAA1B,CAArB;AALuD;AAM1D;;;;oCACW,O,EAAS;AACjB,gBAAI,KAAK,iBAAL,CAAuB,OAAvB,CAAJ,EAAqC;AACjC,0CAAa,KAAK,IAAlB,EAAwB,IAAxB;AACA,qBAAK,IAAL,CAAU,sBAAV,CAAiC,EAAE,WAAW,KAAb,EAAjC;AACH;AACD,gBAAI,+BAAkB,OAAlB,EAA2B,KAAK,SAAhC,CAAJ,EAAgD;AAC5C,qBAAK,IAAL,CAAU,WAAV,CAAsB,KAAK,KAA3B;AACA,qBAAK,SAAL,GAAiB,KAAK,KAAtB;AACH;AACJ;;;0CAOiB,Q,EAAU;AACxB,iBAAK,SAAL,GAAiB,QAAjB;AACA,qCAAkB,QAAlB,CAA2B,KAAK,MAAhC,EAAwC,QAAxC;AACH;;;0CACiB,O,EAAS;AACvB,mBAAO,6BAAiB,QAAjB,CAA0B,OAA1B,EAAmC,MAAnC,CAAP;AACH;;;4BAZU;AAAE,mBAAO,EAAP;AAAY;;;4BACT;AAAE,mBAAO,+BAAkB,KAAK,WAAvB,CAAP;AAA6C;;;4BAC1C;AACjB,mBAAO,oCAAuB,KAAK,gBAA5B,CAAP;AACH;;;4BACa;AAAE,mBAAO,KAAK,IAAZ;AAAmB;;;;;AASvC;;;AACA,qBAAqB,UAArB,GAAkC,CAC9B,EAAE,qBAAF,EAAmB,MAAM,CAAC,EAAE,UAAU,eAAZ,EAA6B,WAAW,CAAC,kBAAD,CAAxC,EAA8D,UAAU,QAAxE,EAAD,CAAzB,EAD8B,CAAlC;AAGA;AACA,qBAAqB,cAArB,GAAsC,CAClC,EAAE,MAAM,KAAR,EAAe,YAAY,CAAC,EAAE,oBAAF,EAAD,EAAqB,EAAE,gBAAF,EAArB,EAAqC,EAAE,kBAAF,EAAgB,MAAM,4BAAtB,EAArC,CAA3B,EADkC,EAElC,EAAE,MAAM,KAAR,EAAe,YAAY,CAAC,EAAE,oBAAF,EAAD,EAAqB,EAAE,gBAAF,EAArB,EAAqC,EAAE,kBAAF,EAAgB,MAAM,kCAAtB,EAArC,CAA3B,EAFkC,EAGlC,EAAE,MAAM,KAAR,EAAe,YAAY,CAAC,EAAE,oBAAF,EAAD,EAAqB,EAAE,gBAAF,EAArB,EAAqC,EAAE,kBAAF,EAAgB,MAAM,2CAAtB,EAArC,CAA3B,EAHkC,CAAtC;AAKA;AACA,qBAAqB,cAArB,GAAsC;AAClC,YAAQ,CAAC,EAAE,iBAAF,EAAe,MAAM,CAAC,aAAD,CAArB,EAAD,CAD0B;AAElC,aAAS,CAAC,EAAE,iBAAF,EAAe,MAAM,CAAC,SAAD,CAArB,EAAD,CAFyB;AAGlC,cAAU,CAAC,EAAE,kBAAF,EAAgB,MAAM,CAAC,eAAD,CAAtB,EAAD;AAHwB,CAAtC;AAKA","file":"form_control_directive-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Inject, Input, Optional, Output, Self, forwardRef } from '@angular/core';\nimport { EventEmitter, ObservableWrapper } from '../../facade/async';\nimport { StringMapWrapper } from '../../facade/collection';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../../validators';\nimport { NG_VALUE_ACCESSOR } from '../control_value_accessor';\nimport { NgControl } from '../ng_control';\nimport { composeAsyncValidators, composeValidators, isPropertyUpdated, selectValueAccessor, setUpControl } from '../shared';\nexport const formControlBinding = \n/*@ts2dart_const*/ /* @ts2dart_Provider */ {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\nexport class FormControlDirective extends NgControl {\n    constructor(_validators, _asyncValidators, valueAccessors) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this.update = new EventEmitter();\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    get path() { return []; }\n    get validator() { return composeValidators(this._validators); }\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    get control() { return this.form; }\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        ObservableWrapper.callEmit(this.update, newValue);\n    }\n    _isControlChanged(changes) {\n        return StringMapWrapper.contains(changes, 'form');\n    }\n}\n/** @nocollapse */\nFormControlDirective.decorators = [\n    { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm' },] },\n];\n/** @nocollapse */\nFormControlDirective.ctorParameters = [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n];\n/** @nocollapse */\nFormControlDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formControl',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n//# sourceMappingURL=form_control_directive.js.map"]}