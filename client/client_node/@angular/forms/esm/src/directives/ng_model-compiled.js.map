{"version":3,"sources":["ng_model.js"],"names":[],"mappings":"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","file":"ng_model-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Host, Inject, Input, Optional, Output, Self, forwardRef } from '@angular/core';\nimport { EventEmitter, ObservableWrapper, PromiseWrapper } from '../facade/async';\nimport { BaseException } from '../facade/exceptions';\nimport { FormControl } from '../model';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../validators';\nimport { ControlContainer } from './control_container';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nimport { NgControl } from './ng_control';\nimport { composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor, setUpControl } from './shared';\nexport const formControlBinding = \n/*@ts2dart_const*/ /* @ts2dart_Provider */ {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\nexport class NgModel extends NgControl {\n    constructor(_parent, _validators, _asyncValidators, valueAccessors) {\n        super();\n        this._parent = _parent;\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /** @internal */\n        this._control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        this.update = new EventEmitter();\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    ngOnChanges(changes) {\n        this._checkName();\n        if (!this._registered)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    ngOnDestroy() { this.formDirective && this.formDirective.removeControl(this); }\n    get control() { return this._control; }\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [];\n    }\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    get validator() { return composeValidators(this._validators); }\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        ObservableWrapper.callEmit(this.update, newValue);\n    }\n    _setUpControl() {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _isStandalone() {\n        return !this._parent || (this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            throw new BaseException(`If ngModel is used within a form tag, either the name attribute must be set\n                      or the form control must be defined as 'standalone' in ngModelOptions.\n\n                      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n                      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">\n                   `);\n        }\n    }\n    _updateValue(value) {\n        PromiseWrapper.scheduleMicrotask(() => { this.control.updateValue(value); });\n    }\n}\n/** @nocollapse */\nNgModel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/** @nocollapse */\nNgModel.ctorParameters = [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n];\n/** @nocollapse */\nNgModel.propDecorators = {\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'name': [{ type: Input },],\n    'options': [{ type: Input, args: ['ngModelOptions',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n//# sourceMappingURL=ng_model.js.map"]}