{"version":3,"sources":["checkbox_value_accessor.js"],"names":[],"mappings":";;;;;;;qjBAAA;;;;;;;;;AAOA;;AACA;;;;AACO,IAAM,4DAA0B;AACnC,sDADmC;AAEnC,iBAAa,sBAAW;AAAA,eAAM,4BAAN;AAAA,KAAX,CAFsB;AAGnC,WAAO;AAH4B,CAAhC;;IAKM,4B,WAAA,4B;AACT,0CAAY,SAAZ,EAAuB,WAAvB,EAAoC;AAAA;;AAChC,aAAK,SAAL,GAAiB,SAAjB;AACA,aAAK,WAAL,GAAmB,WAAnB;AACA,aAAK,QAAL,GAAgB,UAAC,CAAD,EAAO,CAAG,CAA1B;AACA,aAAK,SAAL,GAAiB,YAAM,CAAG,CAA1B;AACH;;;;mCACU,K,EAAO;AACd,iBAAK,SAAL,CAAe,kBAAf,CAAkC,KAAK,WAAL,CAAiB,aAAnD,EAAkE,SAAlE,EAA6E,KAA7E;AACH;;;yCACgB,E,EAAI;AAAE,iBAAK,QAAL,GAAgB,EAAhB;AAAqB;;;0CAC1B,E,EAAI;AAAE,iBAAK,SAAL,GAAiB,EAAjB;AAAsB;;;;;AAElD;;;AACA,6BAA6B,UAA7B,GAA0C,CACtC,EAAE,qBAAF,EAAmB,MAAM,CAAC;AACd,kBAAU,uGADI;AAEd,cAAM,EAAE,YAAY,iCAAd,EAAiD,UAAU,aAA3D,EAFQ;AAGd,mBAAW,CAAC,uBAAD;AAHG,KAAD,CAAzB,EADsC,CAA1C;AAOA;AACA,6BAA6B,cAA7B,GAA8C,CAC1C,EAAE,oBAAF,EAD0C,EAE1C,EAAE,sBAAF,EAF0C,CAA9C;AAIA","file":"checkbox_value_accessor-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Renderer, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nexport const CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true\n};\nexport class CheckboxControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    writeValue(value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n}\n/** @nocollapse */\nCheckboxControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/** @nocollapse */\nCheckboxControlValueAccessor.ctorParameters = [\n    { type: Renderer, },\n    { type: ElementRef, },\n];\n//# sourceMappingURL=checkbox_value_accessor.js.map"]}