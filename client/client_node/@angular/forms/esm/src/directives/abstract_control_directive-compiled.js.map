{"version":3,"sources":["abstract_control_directive.js"],"names":[],"mappings":";;;;;;;qjBAAA;;;;;;;;;AAOA;;AACA;;;;AACA;;;;;;;IAOa,wB,WAAA,wB;;;;;;;4BACK;AAAE,mBAAO,gCAAP;AAAyB;;;4BAC7B;AAAE,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,KAAvC,GAA+C,IAAtD;AAA6D;;;4BAC/D;AAAE,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,KAAvC,GAA+C,IAAtD;AAA6D;;;4BAC9D;AACT,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,MAAvC,GAAgD,IAAvD;AACH;;;4BACc;AAAE,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,QAAvC,GAAkD,IAAzD;AAAgE;;;4BACrE;AAAE,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,KAAvC,GAA+C,IAAtD;AAA6D;;;4BAC7D;AAAE,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,OAAvC,GAAiD,IAAxD;AAA+D;;;4BAC/D;AAAE,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,SAAvC,GAAmD,IAA1D;AAAiE;;;4BAC/D;AAChB,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,aAAvC,GAAuD,IAA9D;AACH;;;4BACkB;AACf,mBAAO,qBAAU,KAAK,OAAf,IAA0B,KAAK,OAAL,CAAa,YAAvC,GAAsD,IAA7D;AACH;;;4BACU;AAAE,mBAAO,IAAP;AAAc;;;;;AAE/B","file":"abstract_control_directive-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { unimplemented } from '../facade/exceptions';\nimport { isPresent } from '../facade/lang';\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * @experimental\n */\nexport class AbstractControlDirective {\n    get control() { return unimplemented(); }\n    get value() { return isPresent(this.control) ? this.control.value : null; }\n    get valid() { return isPresent(this.control) ? this.control.valid : null; }\n    get errors() {\n        return isPresent(this.control) ? this.control.errors : null;\n    }\n    get pristine() { return isPresent(this.control) ? this.control.pristine : null; }\n    get dirty() { return isPresent(this.control) ? this.control.dirty : null; }\n    get touched() { return isPresent(this.control) ? this.control.touched : null; }\n    get untouched() { return isPresent(this.control) ? this.control.untouched : null; }\n    get statusChanges() {\n        return isPresent(this.control) ? this.control.statusChanges : null;\n    }\n    get valueChanges() {\n        return isPresent(this.control) ? this.control.valueChanges : null;\n    }\n    get path() { return null; }\n}\n//# sourceMappingURL=abstract_control_directive.js.map"]}