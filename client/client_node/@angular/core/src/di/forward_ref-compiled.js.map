{"version":3,"sources":["forward_ref.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA;;;;;;;;;;;;AAYA,SAAS,UAAT,CAAoB,YAApB,EAAkC;AAC9B,iBAAa,eAAb,GAA+B,UAA/B;AACA,iBAAa,QAAb,GAAwB,YAAY;AAAE,eAAO,OAAO,SAAP,CAAiB,MAAjB,CAAP;AAAkC,KAAxE;AACA,WAAO,YAAP;AACH;AACD,QAAQ,UAAR,GAAqB,UAArB;AACA;;;;;;;;;;;;;;;;AAgBA,SAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC7B,QAAI,OAAO,UAAP,CAAkB,IAAlB,KAA2B,KAAK,cAAL,CAAoB,iBAApB,CAA3B,IACA,KAAK,eAAL,KAAyB,UAD7B,EACyC;AACrC,eAAO,MAAP;AACH,KAHD,MAIK;AACD,eAAO,IAAP;AACH;AACJ;AACD,QAAQ,iBAAR,GAA4B,iBAA5B;AACA","file":"forward_ref-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar lang_1 = require('../facade/lang');\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return lang_1.stringify(this()); };\n    return forwardRefFn;\n}\nexports.forwardRef = forwardRef;\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * ```typescript\n * var ref = forwardRef(() => \"refValue\");\n * expect(resolveForwardRef(ref)).toEqual(\"refValue\");\n * expect(resolveForwardRef(\"regularValue\")).toEqual(\"regularValue\");\n * ```\n *\n * See: {@link forwardRef}\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (lang_1.isFunction(type) && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\nexports.resolveForwardRef = resolveForwardRef;\n//# sourceMappingURL=forward_ref.js.map"]}