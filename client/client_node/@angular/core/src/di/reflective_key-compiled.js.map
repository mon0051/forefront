{"version":3,"sources":["reflective_key.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,eAAe,QAAQ,sBAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,gBAAgB,QAAQ,eAAR,CAApB;AACA;;;;;;;;;;;;;;;;AAgBA,IAAI,gBAAiB,YAAY;AAC7B;;;AAGA,aAAS,aAAT,CAAuB,KAAvB,EAA8B,EAA9B,EAAkC;AAC9B,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,EAAL,GAAU,EAAV;AACA,YAAI,OAAO,OAAP,CAAe,KAAf,CAAJ,EAA2B;AACvB,kBAAM,IAAI,aAAa,aAAjB,CAA+B,wBAA/B,CAAN;AACH;AACJ;AACD,WAAO,cAAP,CAAsB,cAAc,SAApC,EAA+C,aAA/C,EAA8D;AAC1D;;;AAGA,aAAK,eAAY;AAAE,mBAAO,OAAO,SAAP,CAAiB,KAAK,KAAtB,CAAP;AAAsC,SAJC;AAK1D,oBAAY,IAL8C;AAM1D,sBAAc;AAN4C,KAA9D;AAQA;;;AAGA,kBAAc,GAAd,GAAoB,UAAU,KAAV,EAAiB;AACjC,eAAO,mBAAmB,GAAnB,CAAuB,cAAc,iBAAd,CAAgC,KAAhC,CAAvB,CAAP;AACH,KAFD;AAGA,WAAO,cAAP,CAAsB,aAAtB,EAAqC,cAArC,EAAqD;AACjD;;;AAGA,aAAK,eAAY;AAAE,mBAAO,mBAAmB,YAA1B;AAAyC,SAJX;AAKjD,oBAAY,IALqC;AAMjD,sBAAc;AANmC,KAArD;AAQA,WAAO,aAAP;AACH,CAlCoB,EAArB;AAmCA,QAAQ,aAAR,GAAwB,aAAxB;AACA;;;AAGA,IAAI,cAAe,YAAY;AAC3B,aAAS,WAAT,GAAuB;AACnB,aAAK,QAAL,GAAgB,IAAI,GAAJ,EAAhB;AACH;AACD,gBAAY,SAAZ,CAAsB,GAAtB,GAA4B,UAAU,KAAV,EAAiB;AACzC,YAAI,iBAAiB,aAArB,EACI,OAAO,KAAP;AACJ,YAAI,KAAK,QAAL,CAAc,GAAd,CAAkB,KAAlB,CAAJ,EAA8B;AAC1B,mBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,KAAlB,CAAP;AACH;AACD,YAAI,SAAS,IAAI,aAAJ,CAAkB,KAAlB,EAAyB,cAAc,YAAvC,CAAb;AACA,aAAK,QAAL,CAAc,GAAd,CAAkB,KAAlB,EAAyB,MAAzB;AACA,eAAO,MAAP;AACH,KATD;AAUA,WAAO,cAAP,CAAsB,YAAY,SAAlC,EAA6C,cAA7C,EAA6D;AACzD,aAAK,eAAY;AAAE,mBAAO,KAAK,QAAL,CAAc,IAArB;AAA4B,SADU;AAEzD,oBAAY,IAF6C;AAGzD,sBAAc;AAH2C,KAA7D;AAKA,WAAO,WAAP;AACH,CApBkB,EAAnB;AAqBA,QAAQ,WAAR,GAAsB,WAAtB;AACA,IAAI,qBAAqB,IAAI,WAAJ,EAAzB;AACA","file":"reflective_key-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\nvar forward_ref_1 = require('./forward_ref');\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @experimental\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (lang_1.isBlank(token)) {\n            throw new exceptions_1.BaseException('Token must be defined!');\n        }\n    }\n    Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n        /**\n         * Returns a stringified token.\n         */\n        get: function () { return lang_1.stringify(this.token); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(forward_ref_1.resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nexports.ReflectiveKey = ReflectiveKey;\n/**\n * @internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nexports.KeyRegistry = KeyRegistry;\nvar _globalKeyRegistry = new KeyRegistry();\n//# sourceMappingURL=reflective_key.js.map"]}