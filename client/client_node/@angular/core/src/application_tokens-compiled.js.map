{"version":3,"sources":["application_tokens.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,SAAS,QAAQ,oBAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA;;;;;;;;;;AAUA,QAAQ,MAAR,GAAiB,IAAI,KAAK,WAAT,CAAqB,OAArB,CAAjB;AACA,SAAS,2BAAT,GAAuC;AACnC,SAAO,KAAK,aAAL,GAAqB,aAArB,GAAqC,aAA5C;AACH;AACD;;;;AAIA,QAAQ,sBAAR;AACA,kBADA,CACmB,uBAAwB;AACvC,WAAS,QAAQ,MADsB;AAEvC,cAAY,2BAF2B;AAGvC,QAAM;AAHiC,CAD3C;AAMA,SAAS,WAAT,GAAuB;AACnB,SAAO,OAAO,aAAP,CAAqB,YAArB,CAAkC,KAAK,OAAO,IAAP,CAAY,KAAZ,CAAkB,OAAO,IAAP,CAAY,MAAZ,KAAuB,EAAzC,CAAvC,CAAP;AACH;AACD;;;;AAIA,QAAQ,oBAAR;AACA,kBAAmB,IAAI,KAAK,WAAT,CAAqB,sBAArB,CADnB;AAEA;;;;AAIA,QAAQ,eAAR;AACA,kBAAmB,IAAI,KAAK,WAAT,CAAqB,yBAArB,CADnB;AAEA;;;;AAIA,QAAQ,gBAAR;AACA,kBAAmB,IAAI,KAAK,WAAT,CAAqB,+BAArB,CADnB;AAEA","file":"application_tokens-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar lang_1 = require('../src/facade/lang');\nvar di_1 = require('./di');\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nexports.APP_ID = new di_1.OpaqueToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nexports.APP_ID_RANDOM_PROVIDER = \n/*@ts2dart_const*/ /* @ts2dart_Provider */ {\n    provide: exports.APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: []\n};\nfunction _randomChar() {\n    return lang_1.StringWrapper.fromCharCode(97 + lang_1.Math.floor(lang_1.Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nexports.PLATFORM_INITIALIZER = \n/*@ts2dart_const*/ new di_1.OpaqueToken('Platform Initializer');\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nexports.APP_INITIALIZER = \n/*@ts2dart_const*/ new di_1.OpaqueToken('Application Initializer');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nexports.PACKAGE_ROOT_URL = \n/*@ts2dart_const*/ new di_1.OpaqueToken('Application Packages Root URL');\n//# sourceMappingURL=application_tokens.js.map"]}