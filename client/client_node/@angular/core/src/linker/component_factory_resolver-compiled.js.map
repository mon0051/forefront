{"version":3,"sources":["component_factory_resolver.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,YAAa,aAAQ,UAAK,SAAd,IAA4B,UAAU,CAAV,EAAa,CAAb,EAAgB;AACxD,SAAK,IAAI,CAAT,IAAc,CAAd;AAAiB,YAAI,EAAE,cAAF,CAAiB,CAAjB,CAAJ,EAAyB,EAAE,CAAF,IAAO,EAAE,CAAF,CAAP;AAA1C,KACA,SAAS,EAAT,GAAc;AAAE,aAAK,WAAL,GAAmB,CAAnB;AAAuB;AACvC,MAAE,SAAF,GAAc,MAAM,IAAN,GAAa,OAAO,MAAP,CAAc,CAAd,CAAb,IAAiC,GAAG,SAAH,GAAe,EAAE,SAAjB,EAA4B,IAAI,EAAJ,EAA7D,CAAd;AACH,CAJD;AAKA,IAAI,eAAe,QAAQ,sBAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA;;;AAGA,IAAI,0BAA2B,UAAU,MAAV,EAAkB;AAC7C,cAAU,uBAAV,EAAmC,MAAnC;AACA,aAAS,uBAAT,CAAiC,SAAjC,EAA4C;AACxC,eAAO,IAAP,CAAY,IAAZ,EAAkB,oCAAoC,OAAO,SAAP,CAAiB,SAAjB,CAAtD;AACA,aAAK,SAAL,GAAiB,SAAjB;AACH;AACD,WAAO,uBAAP;AACH,CAP8B,CAO7B,aAAa,aAPgB,CAA/B;AAQA,QAAQ,uBAAR,GAAkC,uBAAlC;AACA,IAAI,gCAAiC,YAAY;AAC7C,aAAS,6BAAT,GAAyC,CACxC;AACD,kCAA8B,SAA9B,CAAwC,uBAAxC,GAAkE,UAAU,SAAV,EAAqB;AACnF,cAAM,IAAI,uBAAJ,CAA4B,SAA5B,CAAN;AACH,KAFD;AAGA,WAAO,6BAAP;AACH,CAPoC,EAArC;AAQA;;;AAGA,IAAI,2BAA4B,YAAY;AACxC,aAAS,wBAAT,GAAoC,CACnC;AACD,6BAAyB,IAAzB,GAAgC,IAAI,6BAAJ,EAAhC;AACA,WAAO,wBAAP;AACH,CAL+B,EAAhC;AAMA,QAAQ,wBAAR,GAAmC,wBAAnC;AACA,IAAI,kCAAmC,YAAY;AAC/C,aAAS,+BAAT,CAAyC,SAAzC,EAAoD,OAApD,EAA6D;AACzD,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,UAAL,GAAkB,IAAI,GAAJ,EAAlB;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACvC,gBAAI,UAAU,UAAU,CAAV,CAAd;AACA,iBAAK,UAAL,CAAgB,GAAhB,CAAoB,QAAQ,aAA5B,EAA2C,OAA3C;AACH;AACJ;AACD,oCAAgC,SAAhC,CAA0C,uBAA1C,GAAoE,UAAU,SAAV,EAAqB;AACrF,YAAI,SAAS,KAAK,UAAL,CAAgB,GAAhB,CAAoB,SAApB,CAAb;AACA,YAAI,CAAC,MAAL,EAAa;AACT,qBAAS,KAAK,OAAL,CAAa,uBAAb,CAAqC,SAArC,CAAT;AACH;AACD,eAAO,MAAP;AACH,KAND;AAOA,WAAO,+BAAP;AACH,CAjBsC,EAAvC;AAkBA,QAAQ,+BAAR,GAA0C,+BAA1C;AACA","file":"component_factory_resolver-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\n/**\n * @stable\n */\nvar NoComponentFactoryError = (function (_super) {\n    __extends(NoComponentFactoryError, _super);\n    function NoComponentFactoryError(component) {\n        _super.call(this, \"No component factory found for \" + lang_1.stringify(component));\n        this.component = component;\n    }\n    return NoComponentFactoryError;\n}(exceptions_1.BaseException));\nexports.NoComponentFactoryError = NoComponentFactoryError;\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw new NoComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * @stable\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nvar CodegenComponentFactoryResolver = (function () {\n    function CodegenComponentFactoryResolver(factories, _parent) {\n        this._parent = _parent;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var result = this._factories.get(component);\n        if (!result) {\n            result = this._parent.resolveComponentFactory(component);\n        }\n        return result;\n    };\n    return CodegenComponentFactoryResolver;\n}());\nexports.CodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n//# sourceMappingURL=component_factory_resolver.js.map"]}