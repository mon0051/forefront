{"version":3,"sources":["compiler.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,eAAe,QAAQ,sBAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA;;;;;;AAMA,IAAI,WAAY,YAAY;AACxB,WAAS,QAAT,GAAoB,CACnB;AACD;;;AAGA,WAAS,SAAT,CAAmB,qBAAnB,GAA2C,UAAU,SAAV,EAAqB;AAC5D,UAAM,IAAI,aAAa,aAAjB,CAA+B,sDAAsD,OAAO,SAAP,CAAiB,SAAjB,CAArF,CAAN;AACH,GAFD;AAGA;;;;AAIA,WAAS,SAAT,CAAmB,oBAAnB,GAA0C,UAAU,SAAV,EAAqB;AAC3D,UAAM,IAAI,aAAa,aAAjB,CAA+B,sDAAsD,OAAO,SAAP,CAAiB,SAAjB,CAArF,CAAN;AACH,GAFD;AAGA;;;AAGA,WAAS,SAAT,CAAmB,UAAnB,GAAgC,YAAY,CAAG,CAA/C;AACA;;;AAGA,WAAS,SAAT,CAAmB,aAAnB,GAAmC,UAAU,QAAV,EAAoB,CAAG,CAA1D;AACA,SAAO,QAAP;AACH,CAzBe,EAAhB;AA0BA,QAAQ,QAAR,GAAmB,QAAnB;AACA","file":"compiler-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\n/**\n * Low-level service for running the angular compiler duirng runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * @stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Loads the template and styles of a component and returns the associated `ComponentFactory`.\n     */\n    Compiler.prototype.compileComponentAsync = function (component) {\n        throw new exceptions_1.BaseException(\"Runtime compiler is not loaded. Tried to compile \" + lang_1.stringify(component));\n    };\n    /**\n     * Compiles the given component. All templates have to be either inline or compiled via\n     * `compileComponentAsync` before.\n     */\n    Compiler.prototype.compileComponentSync = function (component) {\n        throw new exceptions_1.BaseException(\"Runtime compiler is not loaded. Tried to compile \" + lang_1.stringify(component));\n    };\n    /**\n     * Clears all caches\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component.\n     */\n    Compiler.prototype.clearCacheFor = function (compType) { };\n    return Compiler;\n}());\nexports.Compiler = Compiler;\n//# sourceMappingURL=compiler.js.map"]}