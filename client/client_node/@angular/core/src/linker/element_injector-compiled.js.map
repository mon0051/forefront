{"version":3,"sources":["element_injector.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,YAAa,aAAQ,UAAK,SAAd,IAA4B,UAAU,CAAV,EAAa,CAAb,EAAgB;AACxD,SAAK,IAAI,CAAT,IAAc,CAAd;AAAiB,YAAI,EAAE,cAAF,CAAiB,CAAjB,CAAJ,EAAyB,EAAE,CAAF,IAAO,EAAE,CAAF,CAAP;AAA1C,KACA,SAAS,EAAT,GAAc;AAAE,aAAK,WAAL,GAAmB,CAAnB;AAAuB;AACvC,MAAE,SAAF,GAAc,MAAM,IAAN,GAAa,OAAO,MAAP,CAAc,CAAd,CAAb,IAAiC,GAAG,SAAH,GAAe,EAAE,SAAjB,EAA4B,IAAI,EAAJ,EAA7D,CAAd;AACH,CAJD;AAKA,IAAI,aAAa,QAAQ,gBAAR,CAAjB;AACA,IAAI,aAAa,IAAI,MAAJ,EAAjB;AACA,IAAI,kBAAmB,UAAU,MAAV,EAAkB;AACrC,cAAU,eAAV,EAA2B,MAA3B;AACA,aAAS,eAAT,CAAyB,KAAzB,EAAgC,UAAhC,EAA4C;AACxC,eAAO,IAAP,CAAY,IAAZ;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,UAAL,GAAkB,UAAlB;AACH;AACD,oBAAgB,SAAhB,CAA0B,GAA1B,GAAgC,UAAU,KAAV,EAAiB,aAAjB,EAAgC;AAC5D,YAAI,kBAAkB,KAAK,CAA3B,EAA8B;AAAE,4BAAgB,WAAW,kBAA3B;AAAgD;AAChF,YAAI,SAAS,UAAb;AACA,YAAI,WAAW,UAAf,EAA2B;AACvB,qBAAS,KAAK,KAAL,CAAW,WAAX,CAAuB,KAAvB,EAA8B,KAAK,UAAnC,EAA+C,UAA/C,CAAT;AACH;AACD,YAAI,WAAW,UAAf,EAA2B;AACvB,qBAAS,KAAK,KAAL,CAAW,cAAX,CAA0B,GAA1B,CAA8B,KAA9B,EAAqC,aAArC,CAAT;AACH;AACD,eAAO,MAAP;AACH,KAVD;AAWA,WAAO,eAAP;AACH,CAnBsB,CAmBrB,WAAW,QAnBU,CAAvB;AAoBA,QAAQ,eAAR,GAA0B,eAA1B;AACA","file":"element_injector-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar injector_1 = require('../di/injector');\nvar _UNDEFINED = new Object();\nvar ElementInjector = (function (_super) {\n    __extends(ElementInjector, _super);\n    function ElementInjector(_view, _nodeIndex) {\n        _super.call(this);\n        this._view = _view;\n        this._nodeIndex = _nodeIndex;\n    }\n    ElementInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = injector_1.THROW_IF_NOT_FOUND; }\n        var result = _UNDEFINED;\n        if (result === _UNDEFINED) {\n            result = this._view.injectorGet(token, this._nodeIndex, _UNDEFINED);\n        }\n        if (result === _UNDEFINED) {\n            result = this._view.parentInjector.get(token, notFoundValue);\n        }\n        return result;\n    };\n    return ElementInjector;\n}(injector_1.Injector));\nexports.ElementInjector = ElementInjector;\n//# sourceMappingURL=element_injector.js.map"]}