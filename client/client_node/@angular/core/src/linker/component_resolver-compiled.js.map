{"version":3,"sources":["component_resolver.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,YAAa,aAAQ,UAAK,SAAd,IAA4B,UAAU,CAAV,EAAa,CAAb,EAAgB;AACxD,SAAK,IAAI,CAAT,IAAc,CAAd;AAAiB,YAAI,EAAE,cAAF,CAAiB,CAAjB,CAAJ,EAAyB,EAAE,CAAF,IAAO,EAAE,CAAF,CAAP;AAA1C,KACA,SAAS,EAAT,GAAc;AAAE,aAAK,WAAL,GAAmB,CAAnB;AAAuB;AACvC,MAAE,SAAF,GAAc,MAAM,IAAN,GAAa,OAAO,MAAP,CAAc,CAAd,CAAb,IAAiC,GAAG,SAAH,GAAe,EAAE,SAAjB,EAA4B,IAAI,EAAJ,EAA7D,CAAd;AACH,CAJD;AAKA,IAAI,eAAe,QAAQ,kBAAR,CAAnB;AACA,IAAI,UAAU,QAAQ,iBAAR,CAAd;AACA,IAAI,eAAe,QAAQ,sBAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,eAAe,QAAQ,0BAAR,CAAnB;AACA,IAAI,sBAAsB,QAAQ,qBAAR,CAA1B;AACA;;;;;AAKA,IAAI,oBAAqB,YAAY;AACjC,aAAS,iBAAT,GAA6B,CAC5B;AACD,WAAO,iBAAP;AACH,CAJwB,EAAzB;AAKA,QAAQ,iBAAR,GAA4B,iBAA5B;AACA,SAAS,mBAAT,CAA6B,IAA7B,EAAmC;AAC/B,WAAO,gBAAgB,oBAAoB,gBAA3C;AACH;AACD,IAAI,6BAA8B,UAAU,MAAV,EAAkB;AAChD,cAAU,0BAAV,EAAsC,MAAtC;AACA,aAAS,0BAAT,GAAsC;AAClC,eAAO,KAAP,CAAa,IAAb,EAAmB,SAAnB;AACH;AACD,+BAA2B,SAA3B,CAAqC,gBAArC,GAAwD,UAAU,SAAV,EAAqB;AACzE,YAAI,OAAO,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;AAC5B,mBAAO,QAAQ,cAAR,CAAuB,MAAvB,CAA8B,IAAI,aAAa,aAAjB,CAA+B,qCAAqC,SAArC,GAAiD,IAAhF,CAA9B,EAAqH,IAArH,CAAP;AACH;AACD,YAAI,YAAY,aAAa,SAAb,CAAuB,WAAvB,CAAmC,SAAnC,CAAhB;AACA,YAAI,mBAAmB,UAAU,IAAV,CAAe,mBAAf,CAAvB;AACA,YAAI,OAAO,OAAP,CAAe,gBAAf,CAAJ,EAAsC;AAClC,kBAAM,IAAI,aAAa,aAAjB,CAA+B,8BAA8B,OAAO,SAAP,CAAiB,SAAjB,CAA9B,GAA4D,QAA3F,CAAN;AACH;AACD,eAAO,QAAQ,cAAR,CAAuB,OAAvB,CAA+B,gBAA/B,CAAP;AACH,KAVD;AAWA,+BAA2B,SAA3B,CAAqC,UAArC,GAAkD,YAAY,CAAG,CAAjE;AACA;AACA,+BAA2B,UAA3B,GAAwC,CACpC,EAAE,MAAM,aAAa,UAArB,EADoC,CAAxC;AAGA,WAAO,0BAAP;AACH,CAtBiC,CAsBhC,iBAtBgC,CAAlC;AAuBA,QAAQ,0BAAR,GAAqC,0BAArC;AACA","file":"component_resolver-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar decorators_1 = require('../di/decorators');\nvar async_1 = require('../facade/async');\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\nvar reflection_1 = require('../reflection/reflection');\nvar component_factory_1 = require('./component_factory');\n/**\n * Low-level service for loading {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * @experimental\n */\nvar ComponentResolver = (function () {\n    function ComponentResolver() {\n    }\n    return ComponentResolver;\n}());\nexports.ComponentResolver = ComponentResolver;\nfunction _isComponentFactory(type) {\n    return type instanceof component_factory_1.ComponentFactory;\n}\nvar ReflectorComponentResolver = (function (_super) {\n    __extends(ReflectorComponentResolver, _super);\n    function ReflectorComponentResolver() {\n        _super.apply(this, arguments);\n    }\n    ReflectorComponentResolver.prototype.resolveComponent = function (component) {\n        if (lang_1.isString(component)) {\n            return async_1.PromiseWrapper.reject(new exceptions_1.BaseException(\"Cannot resolve component using '\" + component + \"'.\"), null);\n        }\n        var metadatas = reflection_1.reflector.annotations(component);\n        var componentFactory = metadatas.find(_isComponentFactory);\n        if (lang_1.isBlank(componentFactory)) {\n            throw new exceptions_1.BaseException(\"No precompiled component \" + lang_1.stringify(component) + \" found\");\n        }\n        return async_1.PromiseWrapper.resolve(componentFactory);\n    };\n    ReflectorComponentResolver.prototype.clearCache = function () { };\n    /** @nocollapse */\n    ReflectorComponentResolver.decorators = [\n        { type: decorators_1.Injectable },\n    ];\n    return ReflectorComponentResolver;\n}(ComponentResolver));\nexports.ReflectorComponentResolver = ReflectorComponentResolver;\n//# sourceMappingURL=component_resolver.js.map"]}