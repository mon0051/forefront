{"version":3,"sources":["ng_zone_impl.js"],"names":[],"mappings":"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","file":"ng_zone_impl-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\n/**\n * Stores error information; delivered via [NgZone.onError] stream.\n * @deprecated\n */\nvar NgZoneError = (function () {\n    function NgZoneError(error, stackTrace) {\n        this.error = error;\n        this.stackTrace = stackTrace;\n    }\n    return NgZoneError;\n}());\nexports.NgZoneError = NgZoneError;\nvar NgZoneImpl = (function () {\n    function NgZoneImpl(_a) {\n        var _this = this;\n        var trace = _a.trace, onEnter = _a.onEnter, onLeave = _a.onLeave, setMicrotask = _a.setMicrotask, setMacrotask = _a.setMacrotask, onError = _a.onError;\n        this.onEnter = onEnter;\n        this.onLeave = onLeave;\n        this.setMicrotask = setMicrotask;\n        this.setMacrotask = setMacrotask;\n        this.onError = onError;\n        if (Zone) {\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (trace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: { 'isAngularZone': true },\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current == target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.onError(new NgZoneError(error, error.stack));\n                    return false;\n                }\n            });\n        }\n        else {\n            throw new Error('Angular requires Zone.js polyfill.');\n        }\n    }\n    NgZoneImpl.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZoneImpl.prototype.runInner = function (fn) { return this.inner.run(fn); };\n    ;\n    NgZoneImpl.prototype.runInnerGuarded = function (fn) { return this.inner.runGuarded(fn); };\n    ;\n    NgZoneImpl.prototype.runOuter = function (fn) { return this.outer.run(fn); };\n    ;\n    return NgZoneImpl;\n}());\nexports.NgZoneImpl = NgZoneImpl;\n//# sourceMappingURL=ng_zone_impl.js.map"]}