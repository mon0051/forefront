{"version":3,"sources":["exception_handler.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,2BAA2B,QAAQ,0BAAR,CAA/B;AACA,IAAI,eAAe,QAAQ,cAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAgB,YAAY;AAC5B,aAAS,YAAT,GAAwB;AACpB,aAAK,GAAL,GAAW,EAAX;AACH;AACD,iBAAa,SAAb,CAAuB,GAAvB,GAA6B,UAAU,CAAV,EAAa;AAAE,aAAK,GAAL,CAAS,IAAT,CAAc,CAAd;AAAmB,KAA/D;AACA,iBAAa,SAAb,CAAuB,QAAvB,GAAkC,UAAU,CAAV,EAAa;AAAE,aAAK,GAAL,CAAS,IAAT,CAAc,CAAd;AAAmB,KAApE;AACA,iBAAa,SAAb,CAAuB,QAAvB,GAAkC,UAAU,CAAV,EAAa;AAAE,aAAK,GAAL,CAAS,IAAT,CAAc,CAAd;AAAmB,KAApE;AACA,iBAAa,SAAb,CAAuB,WAAvB,GAAqC,YAAY,CAAG,CAApD;AACA;AACA,WAAO,YAAP;AACH,CAVmB,EAApB;AAWA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAI,mBAAoB,YAAY;AAChC,aAAS,gBAAT,CAA0B,OAA1B,EAAmC,iBAAnC,EAAsD;AAClD,YAAI,sBAAsB,KAAK,CAA/B,EAAkC;AAAE,gCAAoB,IAApB;AAA2B;AAC/D,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,iBAAL,GAAyB,iBAAzB;AACH;AACD,qBAAiB,iBAAjB,GAAqC,UAAU,SAAV,EAAqB,UAArB,EAAiC,MAAjC,EAAyC;AAC1E,YAAI,eAAe,KAAK,CAAxB,EAA2B;AAAE,yBAAa,IAAb;AAAoB;AACjD,YAAI,WAAW,KAAK,CAApB,EAAuB;AAAE,qBAAS,IAAT;AAAgB;AACzC,YAAI,IAAI,IAAI,YAAJ,EAAR;AACA,YAAI,IAAI,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,KAAxB,CAAR;AACA,UAAE,IAAF,CAAO,SAAP,EAAkB,UAAlB,EAA8B,MAA9B;AACA,eAAO,EAAE,GAAF,CAAM,IAAN,CAAW,IAAX,CAAP;AACH,KAPD;AAQA,qBAAiB,SAAjB,CAA2B,IAA3B,GAAkC,UAAU,SAAV,EAAqB,UAArB,EAAiC,MAAjC,EAAyC;AACvE,YAAI,eAAe,KAAK,CAAxB,EAA2B;AAAE,yBAAa,IAAb;AAAoB;AACjD,YAAI,WAAW,KAAK,CAApB,EAAuB;AAAE,qBAAS,IAAT;AAAgB;AACzC,YAAI,oBAAoB,KAAK,sBAAL,CAA4B,SAA5B,CAAxB;AACA,YAAI,gBAAgB,KAAK,kBAAL,CAAwB,SAAxB,CAApB;AACA,YAAI,UAAU,KAAK,YAAL,CAAkB,SAAlB,CAAd;AACA,aAAK,OAAL,CAAa,QAAb,CAAsB,gBAAgB,KAAK,eAAL,CAAqB,SAArB,CAAtC;AACA,YAAI,OAAO,SAAP,CAAiB,UAAjB,KAAgC,OAAO,OAAP,CAAe,aAAf,CAApC,EAAmE;AAC/D,iBAAK,OAAL,CAAa,QAAb,CAAsB,aAAtB;AACA,iBAAK,OAAL,CAAa,QAAb,CAAsB,KAAK,eAAL,CAAqB,UAArB,CAAtB;AACH;AACD,YAAI,OAAO,SAAP,CAAiB,MAAjB,CAAJ,EAA8B;AAC1B,iBAAK,OAAL,CAAa,QAAb,CAAsB,aAAa,MAAnC;AACH;AACD,YAAI,OAAO,SAAP,CAAiB,iBAAjB,CAAJ,EAAyC;AACrC,iBAAK,OAAL,CAAa,QAAb,CAAsB,yBAAyB,KAAK,eAAL,CAAqB,iBAArB,CAA/C;AACH;AACD,YAAI,OAAO,SAAP,CAAiB,aAAjB,CAAJ,EAAqC;AACjC,iBAAK,OAAL,CAAa,QAAb,CAAsB,sBAAtB;AACA,iBAAK,OAAL,CAAa,QAAb,CAAsB,KAAK,eAAL,CAAqB,aAArB,CAAtB;AACH;AACD,YAAI,OAAO,SAAP,CAAiB,OAAjB,CAAJ,EAA+B;AAC3B,iBAAK,OAAL,CAAa,QAAb,CAAsB,gBAAtB;AACA,iBAAK,OAAL,CAAa,QAAb,CAAsB,OAAtB;AACH;AACD,aAAK,OAAL,CAAa,WAAb;AACA;AACA;AACA,YAAI,KAAK,iBAAT,EACI,MAAM,SAAN;AACP,KA9BD;AA+BA;AACA,qBAAiB,SAAjB,CAA2B,eAA3B,GAA6C,UAAU,SAAV,EAAqB;AAC9D,eAAO,qBAAqB,yBAAyB,oBAA9C,GAAqE,UAAU,cAA/E,GACH,UAAU,QAAV,EADJ;AAEH,KAHD;AAIA;AACA,qBAAiB,SAAjB,CAA2B,eAA3B,GAA6C,UAAU,UAAV,EAAsB;AAC/D,eAAO,aAAa,kBAAb,CAAgC,UAAhC,IAA8C,WAAW,IAAX,CAAgB,2BAAhB,CAA9C,GACH,WAAW,QAAX,EADJ;AAEH,KAHD;AAIA;AACA,qBAAiB,SAAjB,CAA2B,YAA3B,GAA0C,UAAU,SAAV,EAAqB;AAC3D,YAAI;AACA,gBAAI,EAAE,qBAAqB,yBAAyB,oBAAhD,CAAJ,EACI,OAAO,IAAP;AACJ,mBAAO,OAAO,SAAP,CAAiB,UAAU,OAA3B,IAAsC,UAAU,OAAhD,GACH,KAAK,YAAL,CAAkB,UAAU,iBAA5B,CADJ;AAEH,SALD,CAMA,OAAO,CAAP,EAAU;AACN;AACA,mBAAO,IAAP;AACH;AACJ,KAXD;AAYA;AACA,qBAAiB,SAAjB,CAA2B,sBAA3B,GAAoD,UAAU,SAAV,EAAqB;AACrE,YAAI,EAAE,qBAAqB,yBAAyB,oBAAhD,CAAJ,EACI,OAAO,IAAP;AACJ,YAAI,IAAI,UAAU,iBAAlB;AACA,eAAO,aAAa,yBAAyB,oBAAtC,IAA8D,OAAO,SAAP,CAAiB,EAAE,iBAAnB,CAArE,EAA4G;AACxG,gBAAI,EAAE,iBAAN;AACH;AACD,eAAO,CAAP;AACH,KARD;AASA;AACA,qBAAiB,SAAjB,CAA2B,kBAA3B,GAAgD,UAAU,SAAV,EAAqB;AACjE,YAAI,EAAE,qBAAqB,yBAAyB,oBAAhD,CAAJ,EACI,OAAO,IAAP;AACJ,YAAI,IAAI,SAAR;AACA,YAAI,QAAQ,UAAU,aAAtB;AACA,eAAO,aAAa,yBAAyB,oBAAtC,IAA8D,OAAO,SAAP,CAAiB,EAAE,iBAAnB,CAArE,EAA4G;AACxG,gBAAI,EAAE,iBAAN;AACA,gBAAI,aAAa,yBAAyB,oBAAtC,IAA8D,OAAO,SAAP,CAAiB,EAAE,iBAAnB,CAAlE,EAAyG;AACrG,wBAAQ,EAAE,aAAV;AACH;AACJ;AACD,eAAO,KAAP;AACH,KAZD;AAaA,WAAO,gBAAP;AACH,CA7FuB,EAAxB;AA8FA,QAAQ,gBAAR,GAA2B,gBAA3B;AACA","file":"exception_handler-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar base_wrapped_exception_1 = require('./base_wrapped_exception');\nvar collection_1 = require('./collection');\nvar lang_1 = require('./lang');\nvar _ArrayLogger = (function () {\n    function _ArrayLogger() {\n        this.res = [];\n    }\n    _ArrayLogger.prototype.log = function (s) { this.res.push(s); };\n    _ArrayLogger.prototype.logError = function (s) { this.res.push(s); };\n    _ArrayLogger.prototype.logGroup = function (s) { this.res.push(s); };\n    _ArrayLogger.prototype.logGroupEnd = function () { };\n    ;\n    return _ArrayLogger;\n}());\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ExceptionHandler` prints error messages to the `Console`. To\n * intercept error handling,\n * write a custom exception handler that replaces this default as appropriate for your app.\n *\n * ### Example\n *\n * ```javascript\n *\n * class MyExceptionHandler implements ExceptionHandler {\n *   call(error, stackTrace = null, reason = null) {\n *     // do something with the exception\n *   }\n * }\n *\n * bootstrap(MyApp, {provide: ExceptionHandler, useClass: MyExceptionHandler}])\n *\n * ```\n * @stable\n */\nvar ExceptionHandler = (function () {\n    function ExceptionHandler(_logger, _rethrowException) {\n        if (_rethrowException === void 0) { _rethrowException = true; }\n        this._logger = _logger;\n        this._rethrowException = _rethrowException;\n    }\n    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {\n        if (stackTrace === void 0) { stackTrace = null; }\n        if (reason === void 0) { reason = null; }\n        var l = new _ArrayLogger();\n        var e = new ExceptionHandler(l, false);\n        e.call(exception, stackTrace, reason);\n        return l.res.join('\\n');\n    };\n    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {\n        if (stackTrace === void 0) { stackTrace = null; }\n        if (reason === void 0) { reason = null; }\n        var originalException = this._findOriginalException(exception);\n        var originalStack = this._findOriginalStack(exception);\n        var context = this._findContext(exception);\n        this._logger.logGroup(\"EXCEPTION: \" + this._extractMessage(exception));\n        if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {\n            this._logger.logError('STACKTRACE:');\n            this._logger.logError(this._longStackTrace(stackTrace));\n        }\n        if (lang_1.isPresent(reason)) {\n            this._logger.logError(\"REASON: \" + reason);\n        }\n        if (lang_1.isPresent(originalException)) {\n            this._logger.logError(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalException));\n        }\n        if (lang_1.isPresent(originalStack)) {\n            this._logger.logError('ORIGINAL STACKTRACE:');\n            this._logger.logError(this._longStackTrace(originalStack));\n        }\n        if (lang_1.isPresent(context)) {\n            this._logger.logError('ERROR CONTEXT:');\n            this._logger.logError(context);\n        }\n        this._logger.logGroupEnd();\n        // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n        // when an exception happens. If we do not rethrow, bootstrap will always succeed.\n        if (this._rethrowException)\n            throw exception;\n    };\n    /** @internal */\n    ExceptionHandler.prototype._extractMessage = function (exception) {\n        return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage :\n            exception.toString();\n    };\n    /** @internal */\n    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {\n        return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join('\\n\\n-----async gap-----\\n') :\n            stackTrace.toString();\n    };\n    /** @internal */\n    ExceptionHandler.prototype._findContext = function (exception) {\n        try {\n            if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException))\n                return null;\n            return lang_1.isPresent(exception.context) ? exception.context :\n                this._findContext(exception.originalException);\n        }\n        catch (e) {\n            // exception.context can throw an exception. if it happens, we ignore the context.\n            return null;\n        }\n    };\n    /** @internal */\n    ExceptionHandler.prototype._findOriginalException = function (exception) {\n        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException))\n            return null;\n        var e = exception.originalException;\n        while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {\n            e = e.originalException;\n        }\n        return e;\n    };\n    /** @internal */\n    ExceptionHandler.prototype._findOriginalStack = function (exception) {\n        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException))\n            return null;\n        var e = exception;\n        var stack = exception.originalStack;\n        while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {\n            e = e.originalException;\n            if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {\n                stack = e.originalStack;\n            }\n        }\n        return stack;\n    };\n    return ExceptionHandler;\n}());\nexports.ExceptionHandler = ExceptionHandler;\n//# sourceMappingURL=exception_handler.js.map"]}