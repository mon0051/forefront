{"version":3,"sources":["view.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;AACA;;;;;;;AAMA,CAAC,UAAU,iBAAV,EAA6B;AAC1B;;;;;;;;AAQA,oBAAkB,kBAAkB,UAAlB,IAAgC,CAAlD,IAAuD,UAAvD;AACA;;;;;;AAMA,oBAAkB,kBAAkB,QAAlB,IAA8B,CAAhD,IAAqD,QAArD;AACA;;;AAGA,oBAAkB,kBAAkB,MAAlB,IAA4B,CAA9C,IAAmD,MAAnD;AACH,CArBD,EAqBG,QAAQ,iBAAR,KAA8B,QAAQ,iBAAR,GAA4B,EAA1D,CArBH;AAsBA,IAAI,oBAAoB,QAAQ,iBAAhC;AACA,QAAQ,yBAAR,GAAoC,CAAC,kBAAkB,QAAnB,EAA6B,kBAAkB,MAA/C,EAAuD,kBAAkB,IAAzE,CAApC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAI,eAAgB,YAAY;AAC5B,WAAS,YAAT,CAAsB,EAAtB,EAA0B;AACtB,QAAI,KAAK,OAAO,KAAK,CAAZ,GAAgB,EAAhB,GAAqB,EAA9B;AAAA,QAAkC,cAAc,GAAG,WAAnD;AAAA,QAAgE,WAAW,GAAG,QAA9E;AAAA,QAAwF,aAAa,GAAG,UAAxG;AAAA,QAAoH,QAAQ,GAAG,KAA/H;AAAA,QAAsI,gBAAgB,GAAG,aAAzJ;AAAA,QAAwK,SAAS,GAAG,MAApL;AAAA,QAA4L,YAAY,GAAG,SAA3M;AAAA,QAAsN,aAAa,GAAG,UAAtO;AAAA,QAAkP,gBAAgB,GAAG,aAArQ;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,aAAL,GAAqB,aAArB;AACH;AACD,SAAO,YAAP;AACH,CAdmB,EAApB;AAeA,QAAQ,YAAR,GAAuB,YAAvB;AACA","file":"view-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\n/**\n * Defines template and style encapsulation options available for Component's {@link View}.\n *\n * See {@link ViewMetadata#encapsulation}.\n * @stable\n */\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via\n     * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n     * attribute to all selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\nvar ViewEncapsulation = exports.ViewEncapsulation;\nexports.VIEW_ENCAPSULATION_VALUES = [ViewEncapsulation.Emulated, ViewEncapsulation.Native, ViewEncapsulation.None];\n/**\n * Metadata properties available for configuring Views.\n *\n * Each Angular component requires a single `@Component` and at least one `@View` annotation. The\n * `@View` annotation specifies the HTML template to use, and lists the directives that are active\n * within the template.\n *\n * When a component is instantiated, the template is loaded into the component's shadow root, and\n * the expressions and statements in the template are evaluated against the component.\n *\n * For details on the `@Component` annotation, see {@link ComponentMetadata}.\n *\n * ### Example\n *\n * ```\n * @Component({\n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n *   directives: [GreetUser, Bold]\n * })\n * class Greet {\n *   name: string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * @ts2dart_const\n *\n * @experimental You should most likely be using ComponentMetadata instead.\n */\nvar ViewMetadata = (function () {\n    function ViewMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, directives = _b.directives, pipes = _b.pipes, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n        this.templateUrl = templateUrl;\n        this.template = template;\n        this.styleUrls = styleUrls;\n        this.styles = styles;\n        this.directives = directives;\n        this.pipes = pipes;\n        this.encapsulation = encapsulation;\n        this.animations = animations;\n        this.interpolation = interpolation;\n    }\n    return ViewMetadata;\n}());\nexports.ViewMetadata = ViewMetadata;\n//# sourceMappingURL=view.js.map"]}