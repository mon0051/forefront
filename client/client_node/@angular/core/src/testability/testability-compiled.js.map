{"version":3,"sources":["testability.js"],"names":[],"mappings":"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","file":"testability-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar decorators_1 = require('../di/decorators');\nvar async_1 = require('../facade/async');\nvar collection_1 = require('../facade/collection');\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\nvar ng_zone_1 = require('../zone/ng_zone');\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /** @internal */\n        this._pendingCount = 0;\n        /** @internal */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        /** @internal */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        async_1.ObservableWrapper.subscribe(this._ngZone.onUnstable, function (_) {\n            _this._didWork = true;\n            _this._isZoneStable = false;\n        });\n        this._ngZone.runOutsideAngular(function () {\n            async_1.ObservableWrapper.subscribe(_this._ngZone.onStable, function (_) {\n                ng_zone_1.NgZone.assertNotInAngularZone();\n                lang_1.scheduleMicroTask(function () {\n                    _this._isZoneStable = true;\n                    _this._runCallbacksIfReady();\n                });\n            });\n        });\n    };\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new exceptions_1.BaseException('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            lang_1.scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (_this._callbacks.pop())(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.whenStable = function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    Testability.prototype.findBindings = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    /** @nocollapse */\n    Testability.decorators = [\n        { type: decorators_1.Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = [\n        { type: ng_zone_1.NgZone, },\n    ];\n    return Testability;\n}());\nexports.Testability = Testability;\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new collection_1.Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return collection_1.MapWrapper.values(this._applications); };\n    TestabilityRegistry.prototype.getAllRootElements = function () { return collection_1.MapWrapper.keys(this._applications); };\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    /** @nocollapse */\n    TestabilityRegistry.decorators = [\n        { type: decorators_1.Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = [];\n    return TestabilityRegistry;\n}());\nexports.TestabilityRegistry = TestabilityRegistry;\n/* @ts2dart_const */\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nexports.setTestabilityGetter = setTestabilityGetter;\nvar _testabilityGetter = new _NoopGetTestability();\n//# sourceMappingURL=testability.js.map"]}