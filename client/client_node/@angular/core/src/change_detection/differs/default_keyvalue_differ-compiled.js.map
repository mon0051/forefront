{"version":3,"sources":["default_keyvalue_differ.js"],"names":[],"mappings":"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","file":"default_keyvalue_differ-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar collection_1 = require('../../facade/collection');\nvar exceptions_1 = require('../../facade/exceptions');\nvar lang_1 = require('../../facade/lang');\n/* @ts2dart_const */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || lang_1.isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nexports.DefaultKeyValueDifferFactory = DefaultKeyValueDifferFactory;\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (lang_1.isBlank(map))\n            map = collection_1.MapWrapper.createFromPairs([]);\n        if (!(map instanceof Map || lang_1.isJsObject(map))) {\n            throw new exceptions_1.BaseException(\"Error trying to diff '\" + map + \"'\");\n        }\n        if (this.check(map)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var records = this._records;\n        var oldSeqRecord = this._mapHead;\n        var lastOldSeqRecord = null;\n        var lastNewSeqRecord = null;\n        var seqChanged = false;\n        this._forEach(map, function (value /** TODO #9100 */, key /** TODO #9100 */) {\n            var newSeqRecord;\n            if (oldSeqRecord !== null && key === oldSeqRecord.key) {\n                newSeqRecord = oldSeqRecord;\n                if (!lang_1.looseIdentical(value, oldSeqRecord.currentValue)) {\n                    oldSeqRecord.previousValue = oldSeqRecord.currentValue;\n                    oldSeqRecord.currentValue = value;\n                    _this._addToChanges(oldSeqRecord);\n                }\n            }\n            else {\n                seqChanged = true;\n                if (oldSeqRecord !== null) {\n                    oldSeqRecord._next = null;\n                    _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                    _this._addToRemovals(oldSeqRecord);\n                }\n                if (records.has(key)) {\n                    newSeqRecord = records.get(key);\n                }\n                else {\n                    newSeqRecord = new KeyValueChangeRecord(key);\n                    records.set(key, newSeqRecord);\n                    newSeqRecord.currentValue = value;\n                    _this._addToAdditions(newSeqRecord);\n                }\n            }\n            if (seqChanged) {\n                if (_this._isInRemovals(newSeqRecord)) {\n                    _this._removeFromRemovals(newSeqRecord);\n                }\n                if (lastNewSeqRecord == null) {\n                    _this._mapHead = newSeqRecord;\n                }\n                else {\n                    lastNewSeqRecord._next = newSeqRecord;\n                }\n            }\n            lastOldSeqRecord = oldSeqRecord;\n            lastNewSeqRecord = newSeqRecord;\n            oldSeqRecord = oldSeqRecord === null ? null : oldSeqRecord._next;\n        });\n        this._truncate(lastOldSeqRecord, oldSeqRecord);\n        return this.isDirty;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record;\n            // Record the state of the mapping\n            for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            // todo(vicb) once assert is supported\n            // assert(() {\n            //  var r = _changesHead;\n            //  while (r != null) {\n            //    var nextRecord = r._nextChanged;\n            //    r._nextChanged = null;\n            //    r = nextRecord;\n            //  }\n            //\n            //  r = _additionsHead;\n            //  while (r != null) {\n            //    var nextRecord = r._nextAdded;\n            //    r._nextAdded = null;\n            //    r = nextRecord;\n            //  }\n            //\n            //  r = _removalsHead;\n            //  while (r != null) {\n            //    var nextRecord = r._nextRemoved;\n            //    r._nextRemoved = null;\n            //    r = nextRecord;\n            //  }\n            //\n            //  return true;\n            //});\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = this._removalsTail = null;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n        while (record !== null) {\n            if (lastRecord === null) {\n                this._mapHead = null;\n            }\n            else {\n                lastRecord._next = null;\n            }\n            var nextRecord = record._next;\n            // todo(vicb) assert\n            // assert((() {\n            //  record._next = null;\n            //  return true;\n            //}));\n            this._addToRemovals(record);\n            lastRecord = record;\n            record = nextRecord;\n        }\n        for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n            rec.previousValue = rec.currentValue;\n            rec.currentValue = null;\n            this._records.delete(rec.key);\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n        return record === this._removalsHead || record._nextRemoved !== null ||\n            record._prevRemoved !== null;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n        // todo(vicb) assert\n        // assert(record._next == null);\n        // assert(record._nextAdded == null);\n        // assert(record._nextChanged == null);\n        // assert(record._nextRemoved == null);\n        // assert(record._prevRemoved == null);\n        if (this._removalsHead === null) {\n            this._removalsHead = this._removalsTail = record;\n        }\n        else {\n            this._removalsTail._nextRemoved = record;\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n        var next = record._next;\n        if (prev === null) {\n            this._mapHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        // todo(vicb) assert\n        // assert((() {\n        //  record._next = null;\n        //  return true;\n        //})());\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n        // todo(vicb) assert\n        // assert(record._next == null);\n        // assert(record._nextAdded == null);\n        // assert(record._nextChanged == null);\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        record._prevRemoved = record._nextRemoved = null;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        // todo(vicb): assert\n        // assert(record._next == null);\n        // assert(record._nextAdded == null);\n        // assert(record._nextChanged == null);\n        // assert(record._nextRemoved == null);\n        // assert(record._prevRemoved == null);\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        // todo(vicb) assert\n        // assert(record._nextAdded == null);\n        // assert(record._nextChanged == null);\n        // assert(record._nextRemoved == null);\n        // assert(record._prevRemoved == null);\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype.toString = function () {\n        var items = [];\n        var previous = [];\n        var changes = [];\n        var additions = [];\n        var removals = [];\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            items.push(lang_1.stringify(record));\n        }\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            previous.push(lang_1.stringify(record));\n        }\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            changes.push(lang_1.stringify(record));\n        }\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            additions.push(lang_1.stringify(record));\n        }\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            removals.push(lang_1.stringify(record));\n        }\n        return 'map: ' + items.join(', ') + '\\n' +\n            'previous: ' + previous.join(', ') + '\\n' +\n            'additions: ' + additions.join(', ') + '\\n' +\n            'changes: ' + changes.join(', ') + '\\n' +\n            'removals: ' + removals.join(', ') + '\\n';\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj /** TODO #9100 */, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            collection_1.StringMapWrapper.forEach(obj, fn);\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nexports.DefaultKeyValueDiffer = DefaultKeyValueDiffer;\n/**\n * @stable\n */\nvar KeyValueChangeRecord = (function () {\n    function KeyValueChangeRecord(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    KeyValueChangeRecord.prototype.toString = function () {\n        return lang_1.looseIdentical(this.previousValue, this.currentValue) ?\n            lang_1.stringify(this.key) :\n            (lang_1.stringify(this.key) + '[' + lang_1.stringify(this.previousValue) + '->' +\n                lang_1.stringify(this.currentValue) + ']');\n    };\n    return KeyValueChangeRecord;\n}());\nexports.KeyValueChangeRecord = KeyValueChangeRecord;\n//# sourceMappingURL=default_keyvalue_differ.js.map"]}