{"version":3,"sources":["change_detection_util.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,eAAe,QAAQ,sBAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,QAAQ,cAAR,GAAyB,OAAO,cAAhC;AACA,QAAQ,aAAR,GAAwB,IAAI,MAAJ,EAAxB;AACA,SAAS,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B;AACxB,QAAI,aAAa,kBAAb,CAAgC,CAAhC,KAAsC,aAAa,kBAAb,CAAgC,CAAhC,CAA1C,EAA8E;AAC1E,eAAO,aAAa,iBAAb,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,YAArC,CAAP;AACH,KAFD,MAGK,IAAI,CAAC,aAAa,kBAAb,CAAgC,CAAhC,CAAD,IAAuC,CAAC,OAAO,WAAP,CAAmB,CAAnB,CAAxC,IAAiE,CAAC,aAAa,kBAAb,CAAgC,CAAhC,CAAlE,IAAwG,CAAC,OAAO,WAAP,CAAmB,CAAnB,CAA7G,EAAoI;AACrI,eAAO,IAAP;AACH,KAFI,MAGA;AACD,eAAO,OAAO,cAAP,CAAsB,CAAtB,EAAyB,CAAzB,CAAP;AACH;AACJ;AACD,QAAQ,YAAR,GAAuB,YAAvB;AACA;;;;;;;;;;;;;;;;;;;AAmBA,IAAI,eAAgB,YAAY;AAC5B,aAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC3B,aAAK,OAAL,GAAe,OAAf;AACH;AACD,iBAAa,IAAb,GAAoB,UAAU,KAAV,EAAiB;AAAE,eAAO,IAAI,YAAJ,CAAiB,KAAjB,CAAP;AAAiC,KAAxE;AACA,WAAO,YAAP;AACH,CANmB,EAApB;AAOA,QAAQ,YAAR,GAAuB,YAAvB;AACA;;;AAGA,IAAI,iBAAkB,YAAY;AAC9B,aAAS,cAAT,GAA0B;AACtB,aAAK,eAAL,GAAuB,KAAvB;AACH;AACD,mBAAe,SAAf,CAAyB,MAAzB,GAAkC,UAAU,KAAV,EAAiB;AAC/C,YAAI,iBAAiB,YAArB,EAAmC;AAC/B,iBAAK,eAAL,GAAuB,IAAvB;AACA,mBAAO,MAAM,OAAb;AACH;AACD,eAAO,KAAP;AACH,KAND;AAOA,mBAAe,SAAf,CAAyB,KAAzB,GAAiC,YAAY;AAAE,aAAK,eAAL,GAAuB,KAAvB;AAA+B,KAA9E;AACA,WAAO,cAAP;AACH,CAbqB,EAAtB;AAcA,QAAQ,cAAR,GAAyB,cAAzB;AACA;;;;AAIA,IAAI,eAAgB,YAAY;AAC5B,aAAS,YAAT,CAAsB,aAAtB,EAAqC,YAArC,EAAmD;AAC/C,aAAK,aAAL,GAAqB,aAArB;AACA,aAAK,YAAL,GAAoB,YAApB;AACH;AACD;;;AAGA,iBAAa,SAAb,CAAuB,aAAvB,GAAuC,YAAY;AAAE,eAAO,KAAK,aAAL,KAAuB,QAAQ,aAAtC;AAAsD,KAA3G;AACA,WAAO,YAAP;AACH,CAVmB,EAApB;AAWA,QAAQ,YAAR,GAAuB,YAAvB;AACA","file":"change_detection_util-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar collection_1 = require('../facade/collection');\nvar lang_1 = require('../facade/lang');\nvar lang_2 = require('../facade/lang');\nexports.looseIdentical = lang_2.looseIdentical;\nexports.uninitialized = new Object();\nfunction devModeEqual(a, b) {\n    if (collection_1.isListLikeIterable(a) && collection_1.isListLikeIterable(b)) {\n        return collection_1.areIterablesEqual(a, b, devModeEqual);\n    }\n    else if (!collection_1.isListLikeIterable(a) && !lang_1.isPrimitive(a) && !collection_1.isListLikeIterable(b) && !lang_1.isPrimitive(b)) {\n        return true;\n    }\n    else {\n        return lang_1.looseIdentical(a, b);\n    }\n}\nexports.devModeEqual = devModeEqual;\n/**\n * Indicates that the result of a {@link PipeMetadata} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * @stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\nexports.WrappedValue = WrappedValue;\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    ValueUnwrapper.prototype.unwrap = function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\nexports.ValueUnwrapper = ValueUnwrapper;\n/**\n * Represents a basic change from a previous to a new value.\n * @stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.previousValue === exports.uninitialized; };\n    return SimpleChange;\n}());\nexports.SimpleChange = SimpleChange;\n//# sourceMappingURL=change_detection_util.js.map"]}