{"version":3,"sources":["constants.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA;;;;;AAKA,CAAC,UAAU,uBAAV,EAAmC;AAChC;;;AAGA,0BAAwB,wBAAwB,QAAxB,IAAoC,CAA5D,IAAiE,QAAjE;AACA;;;AAGA,0BAAwB,wBAAwB,SAAxB,IAAqC,CAA7D,IAAkE,SAAlE;AACH,CATD,EASG,QAAQ,uBAAR,KAAoC,QAAQ,uBAAR,GAAkC,EAAtE,CATH;AAUA,IAAI,0BAA0B,QAAQ,uBAAtC;AACA;;;AAGA,CAAC,UAAU,oBAAV,EAAgC;AAC7B;;;;AAIA,uBAAqB,qBAAqB,WAArB,IAAoC,CAAzD,IAA8D,WAA9D;AACA;;;;AAIA,uBAAqB,qBAAqB,SAArB,IAAkC,CAAvD,IAA4D,SAA5D;AACA;;;;AAIA,uBAAqB,qBAAqB,aAArB,IAAsC,CAA3D,IAAgE,aAAhE;AACA;;;;AAIA,uBAAqB,qBAAqB,UAArB,IAAmC,CAAxD,IAA6D,UAA7D;AACA;;;;;AAKA,uBAAqB,qBAAqB,SAArB,IAAkC,CAAvD,IAA4D,SAA5D;AACA;;;AAGA,uBAAqB,qBAAqB,WAArB,IAAoC,CAAzD,IAA8D,WAA9D;AACH,CA/BD,EA+BG,QAAQ,oBAAR,KAAiC,QAAQ,oBAAR,GAA+B,EAAhE,CA/BH;AAgCA,IAAI,uBAAuB,QAAQ,oBAAnC;AACA;;;AAGA,QAAQ,gCAAR,GAA2C,CACvC,wBAAwB,MADe,EAEvC,wBAAwB,OAFe,CAA3C;AAIA;;;AAGA,QAAQ,6BAAR,GAAwC,CACpC,qBAAqB,SADe,EAEpC,qBAAqB,OAFe,EAGpC,qBAAqB,WAHe,EAIpC,qBAAqB,QAJe,EAKpC,qBAAqB,OALe,EAMpC,qBAAqB,SANe,CAAxC;AAQA,SAAS,gCAAT,CAA0C,uBAA1C,EAAmE;AAC/D,SAAO,OAAO,OAAP,CAAe,uBAAf,KACH,4BAA4B,wBAAwB,OADxD;AAEH;AACD,QAAQ,gCAAR,GAA2C,gCAA3C;AACA","file":"constants-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar lang_1 = require('../facade/lang');\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n * @stable\n */\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\nvar ChangeDetectionStrategy = exports.ChangeDetectionStrategy;\n/**\n * Describes the status of the detector.\n */\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ChangeDetectorStatus || (exports.ChangeDetectorStatus = {}));\nvar ChangeDetectorStatus = exports.ChangeDetectorStatus;\n/**\n * List of possible {@link ChangeDetectionStrategy} values.\n */\nexports.CHANGE_DETECTION_STRATEGY_VALUES = [\n    ChangeDetectionStrategy.OnPush,\n    ChangeDetectionStrategy.Default,\n];\n/**\n * List of possible {@link ChangeDetectorStatus} values.\n */\nexports.CHANGE_DETECTOR_STATUS_VALUES = [\n    ChangeDetectorStatus.CheckOnce,\n    ChangeDetectorStatus.Checked,\n    ChangeDetectorStatus.CheckAlways,\n    ChangeDetectorStatus.Detached,\n    ChangeDetectorStatus.Errored,\n    ChangeDetectorStatus.Destroyed,\n];\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return lang_1.isBlank(changeDetectionStrategy) ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\nexports.isDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n//# sourceMappingURL=constants.js.map"]}