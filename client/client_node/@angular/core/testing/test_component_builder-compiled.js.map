{"version":3,"sources":["test_component_builder.js"],"names":[],"mappings":"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","file":"test_component_builder-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar index_1 = require('../index');\nvar async_1 = require('../src/facade/async');\nvar lang_1 = require('../src/facade/lang');\nvar component_fixture_1 = require('./component_fixture');\nvar fake_async_1 = require('./fake_async');\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * @experimental\n */\nvar TestComponentRenderer = (function () {\n    function TestComponentRenderer() {\n    }\n    TestComponentRenderer.prototype.insertRootElement = function (rootElementId) { };\n    return TestComponentRenderer;\n}());\nexports.TestComponentRenderer = TestComponentRenderer;\n/**\n * @experimental\n */\nexports.ComponentFixtureAutoDetect = new index_1.OpaqueToken('ComponentFixtureAutoDetect');\n/**\n * @experimental\n */\nexports.ComponentFixtureNoNgZone = new index_1.OpaqueToken('ComponentFixtureNoNgZone');\nvar _nextRootElementId = 0;\nvar TestComponentBuilder = (function () {\n    function TestComponentBuilder(_injector) {\n        this._injector = _injector;\n    }\n    /**\n     * Overrides only the html of a {@link ComponentMetadata}.\n     * All the other properties of the component's {@link ViewMetadata} are preserved.\n     */\n    TestComponentBuilder.prototype.overrideTemplate = function (componentType, template) {\n        throw new Error('overrideTemplate is not supported in this implementation of TestComponentBuilder.');\n    };\n    /**\n     * Overrides a component's {@link ViewMetadata}.\n     */\n    TestComponentBuilder.prototype.overrideView = function (componentType, view) {\n        throw new Error('overrideView is not supported in this implementation of TestComponentBuilder.');\n    };\n    /**\n     * Overrides the directives from the component {@link ViewMetadata}.\n     */\n    TestComponentBuilder.prototype.overrideDirective = function (componentType, from, to) {\n        throw new Error('overrideDirective is not supported in this implementation of TestComponentBuilder.');\n    };\n    /**\n     * Overrides one or more injectables configured via `providers` metadata property of a directive\n     * or\n     * component.\n     * Very useful when certain providers need to be mocked out.\n     *\n     * The providers specified via this method are appended to the existing `providers` causing the\n     * duplicated providers to\n     * be overridden.\n     */\n    TestComponentBuilder.prototype.overrideProviders = function (type, providers) {\n        throw new Error('overrideProviders is not supported in this implementation of TestComponentBuilder.');\n    };\n    /**\n     * Overrides one or more injectables configured via `providers` metadata property of a directive\n     * or\n     * component.\n     * Very useful when certain providers need to be mocked out.\n     *\n     * The providers specified via this method are appended to the existing `providers` causing the\n     * duplicated providers to\n     * be overridden.\n     */\n    TestComponentBuilder.prototype.overrideViewProviders = function (type, providers) {\n        throw new Error('overrideViewProviders is not supported in this implementation of TestComponentBuilder.');\n    };\n    TestComponentBuilder.prototype.overrideAnimations = function (componentType, animations) {\n        throw new Error('overrideAnimations is not supported in this implementation of TestComponentBuilder.');\n    };\n    TestComponentBuilder.prototype.createFromFactory = function (ngZone, componentFactory) {\n        var rootElId = \"root\" + _nextRootElementId++;\n        var testComponentRenderer = this._injector.get(TestComponentRenderer);\n        testComponentRenderer.insertRootElement(rootElId);\n        var componentRef = componentFactory.create(this._injector, [], \"#\" + rootElId);\n        var autoDetect = this._injector.get(exports.ComponentFixtureAutoDetect, false);\n        return new component_fixture_1.ComponentFixture(componentRef, ngZone, autoDetect);\n    };\n    /**\n     * Builds and returns a ComponentFixture.\n     */\n    TestComponentBuilder.prototype.createAsync = function (rootComponentType) {\n        var _this = this;\n        var noNgZone = lang_1.IS_DART || this._injector.get(exports.ComponentFixtureNoNgZone, false);\n        var ngZone = noNgZone ? null : this._injector.get(index_1.NgZone, null);\n        var compiler = this._injector.get(index_1.Compiler);\n        var initComponent = function () {\n            var promise = compiler.compileComponentAsync(rootComponentType);\n            return promise.then(function (componentFactory) { return _this.createFromFactory(ngZone, componentFactory); });\n        };\n        return ngZone == null ? initComponent() : ngZone.run(initComponent);\n    };\n    TestComponentBuilder.prototype.createFakeAsync = function (rootComponentType) {\n        var result;\n        var error;\n        async_1.PromiseWrapper.then(this.createAsync(rootComponentType), function (_result) { result = _result; }, function (_error) { error = _error; });\n        fake_async_1.tick();\n        if (lang_1.isPresent(error)) {\n            throw error;\n        }\n        return result;\n    };\n    TestComponentBuilder.prototype.createSync = function (rootComponentType) {\n        var _this = this;\n        var noNgZone = lang_1.IS_DART || this._injector.get(exports.ComponentFixtureNoNgZone, false);\n        var ngZone = noNgZone ? null : this._injector.get(index_1.NgZone, null);\n        var compiler = this._injector.get(index_1.Compiler);\n        var initComponent = function () {\n            return _this.createFromFactory(ngZone, _this._injector.get(index_1.Compiler).compileComponentSync(rootComponentType));\n        };\n        return ngZone == null ? initComponent() : ngZone.run(initComponent);\n    };\n    /** @nocollapse */\n    TestComponentBuilder.decorators = [\n        { type: index_1.Injectable },\n    ];\n    /** @nocollapse */\n    TestComponentBuilder.ctorParameters = [\n        { type: index_1.Injector, },\n    ];\n    return TestComponentBuilder;\n}());\nexports.TestComponentBuilder = TestComponentBuilder;\n//# sourceMappingURL=test_component_builder.js.map"]}