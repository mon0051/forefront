{"version":3,"sources":["test_injector.js"],"names":[],"mappings":"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","file":"test_injector-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar index_1 = require('../index');\nvar application_ref_1 = require('../src/application_ref');\nvar collection_1 = require('../src/facade/collection');\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar async_test_completer_1 = require('./async_test_completer');\n/**\n * @experimental\n */\nvar TestInjector = (function () {\n    function TestInjector() {\n        this._instantiated = false;\n        this._injector = null;\n        this._providers = [];\n        this.platformProviders = [];\n        this.applicationProviders = [];\n    }\n    TestInjector.prototype.reset = function () {\n        this._injector = null;\n        this._providers = [];\n        this._instantiated = false;\n    };\n    TestInjector.prototype.addProviders = function (providers) {\n        if (this._instantiated) {\n            throw new exceptions_1.BaseException('Cannot add providers after test injector is instantiated');\n        }\n        this._providers = collection_1.ListWrapper.concat(this._providers, providers);\n    };\n    TestInjector.prototype.createInjector = function () {\n        application_ref_1.lockRunMode();\n        var rootInjector = index_1.ReflectiveInjector.resolveAndCreate(this.platformProviders);\n        this._injector = rootInjector.resolveAndCreateChild(collection_1.ListWrapper.concat(this.applicationProviders, this._providers));\n        this._instantiated = true;\n        return this._injector;\n    };\n    TestInjector.prototype.get = function (token) {\n        if (!this._instantiated) {\n            this.createInjector();\n        }\n        return this._injector.get(token);\n    };\n    TestInjector.prototype.execute = function (tokens, fn) {\n        var _this = this;\n        if (!this._instantiated) {\n            this.createInjector();\n        }\n        var params = tokens.map(function (t) { return _this._injector.get(t); });\n        return lang_1.FunctionWrapper.apply(fn, params);\n    };\n    return TestInjector;\n}());\nexports.TestInjector = TestInjector;\nvar _testInjector = null;\n/**\n * @experimental\n */\nfunction getTestInjector() {\n    if (_testInjector == null) {\n        _testInjector = new TestInjector();\n    }\n    return _testInjector;\n}\nexports.getTestInjector = getTestInjector;\n/**\n * Set the providers that the test injector should use. These should be providers\n * common to every test in the suite.\n *\n * This may only be called once, to set up the common providers for the current test\n * suite on the current platform. If you absolutely need to change the providers,\n * first use `resetBaseTestProviders`.\n *\n * Test Providers for individual platforms are available from\n * 'angular2/platform/testing/<platform_name>'.\n *\n * @experimental\n */\nfunction setBaseTestProviders(platformProviders, applicationProviders) {\n    var testInjector = getTestInjector();\n    if (testInjector.platformProviders.length > 0 || testInjector.applicationProviders.length > 0) {\n        throw new exceptions_1.BaseException('Cannot set base providers because it has already been called');\n    }\n    testInjector.platformProviders = platformProviders;\n    testInjector.applicationProviders = applicationProviders;\n    var injector = testInjector.createInjector();\n    var inits = injector.get(index_1.PLATFORM_INITIALIZER, null);\n    if (lang_1.isPresent(inits)) {\n        inits.forEach(function (init) { return init(); });\n    }\n    testInjector.reset();\n}\nexports.setBaseTestProviders = setBaseTestProviders;\n/**\n * Reset the providers for the test injector.\n *\n * @experimental\n */\nfunction resetBaseTestProviders() {\n    var testInjector = getTestInjector();\n    testInjector.platformProviders = [];\n    testInjector.applicationProviders = [];\n    testInjector.reset();\n}\nexports.resetBaseTestProviders = resetBaseTestProviders;\n/**\n * Allows injecting dependencies in `beforeEach()` and `it()`.\n *\n * Example:\n *\n * ```\n * beforeEach(inject([Dependency, AClass], (dep, object) => {\n *   // some code that uses `dep` and `object`\n *   // ...\n * }));\n *\n * it('...', inject([AClass], (object) => {\n *   object.doSomething();\n *   expect(...);\n * })\n * ```\n *\n * Notes:\n * - inject is currently a function because of some Traceur limitation the syntax should\n * eventually\n *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n *\n * @stable\n */\nfunction inject(tokens, fn) {\n    var testInjector = getTestInjector();\n    if (tokens.indexOf(async_test_completer_1.AsyncTestCompleter) >= 0) {\n        // Return an async test method that returns a Promise if AsyncTestCompleter is one of the\n        // injected tokens.\n        return function () {\n            var completer = testInjector.get(async_test_completer_1.AsyncTestCompleter);\n            testInjector.execute(tokens, fn);\n            return completer.promise;\n        };\n    }\n    else {\n        // Return a synchronous test method with the injected tokens.\n        return function () { return getTestInjector().execute(tokens, fn); };\n    }\n}\nexports.inject = inject;\n/**\n * @experimental\n */\nvar InjectSetupWrapper = (function () {\n    function InjectSetupWrapper(_providers) {\n        this._providers = _providers;\n    }\n    InjectSetupWrapper.prototype._addProviders = function () {\n        var additionalProviders = this._providers();\n        if (additionalProviders.length > 0) {\n            getTestInjector().addProviders(additionalProviders);\n        }\n    };\n    InjectSetupWrapper.prototype.inject = function (tokens, fn) {\n        var _this = this;\n        return function () {\n            _this._addProviders();\n            return inject_impl(tokens, fn)();\n        };\n    };\n    return InjectSetupWrapper;\n}());\nexports.InjectSetupWrapper = InjectSetupWrapper;\n/**\n * @experimental\n */\nfunction withProviders(providers) {\n    return new InjectSetupWrapper(providers);\n}\nexports.withProviders = withProviders;\n// This is to ensure inject(Async) within InjectSetupWrapper doesn't call itself\n// when transpiled to Dart.\nvar inject_impl = inject;\n//# sourceMappingURL=test_injector.js.map"]}