{"version":3,"sources":["base_response_options.js"],"names":[],"mappings":"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","file":"base_response_options-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../src/facade/lang');\nvar enums_1 = require('./enums');\nvar headers_1 = require('./headers');\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @experimental\n */\nvar ResponseOptions = (function () {\n    function ResponseOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n        this.body = lang_1.isPresent(body) ? body : null;\n        this.status = lang_1.isPresent(status) ? status : null;\n        this.headers = lang_1.isPresent(headers) ? headers : null;\n        this.statusText = lang_1.isPresent(statusText) ? statusText : null;\n        this.type = lang_1.isPresent(type) ? type : null;\n        this.url = lang_1.isPresent(url) ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,\n            status: lang_1.isPresent(options) && lang_1.isPresent(options.status) ? options.status : this.status,\n            headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,\n            statusText: lang_1.isPresent(options) && lang_1.isPresent(options.statusText) ? options.statusText :\n                this.statusText,\n            type: lang_1.isPresent(options) && lang_1.isPresent(options.type) ? options.type : this.type,\n            url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\nexports.ResponseOptions = ResponseOptions;\nvar BaseResponseOptions = (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        _super.call(this, { status: 200, statusText: 'Ok', type: enums_1.ResponseType.Default, headers: new headers_1.Headers() });\n    }\n    /** @nocollapse */\n    BaseResponseOptions.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    BaseResponseOptions.ctorParameters = [];\n    return BaseResponseOptions;\n}(ResponseOptions));\nexports.BaseResponseOptions = BaseResponseOptions;\n//# sourceMappingURL=base_response_options.js.map"]}