{"version":3,"sources":["headers.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,eAAe,QAAQ,0BAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,oBAAR,CAAb;AACA,IAAI,eAAe,QAAQ,0BAAR,CAAnB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,IAAI,UAAW,YAAY;AACvB,aAAS,OAAT,CAAiB,OAAjB,EAA0B;AACtB,YAAI,QAAQ,IAAZ;AACA,YAAI,mBAAmB,OAAvB,EAAgC;AAC5B,iBAAK,WAAL,GAAmB,QAAQ,WAA3B;AACA;AACH;AACD,aAAK,WAAL,GAAmB,IAAI,aAAa,GAAjB,EAAnB;AACA,YAAI,OAAO,OAAP,CAAe,OAAf,CAAJ,EAA6B;AACzB;AACH;AACD;AACA,qBAAa,gBAAb,CAA8B,OAA9B,CAAsC,OAAtC,EAA+C,UAAU,CAAV,EAAa,CAAb,EAAgB;AAC3D,kBAAM,WAAN,CAAkB,GAAlB,CAAsB,CAAtB,EAAyB,aAAa,kBAAb,CAAgC,CAAhC,IAAqC,CAArC,GAAyC,CAAC,CAAD,CAAlE;AACH,SAFD;AAGH;AACD;;;AAGA,YAAQ,wBAAR,GAAmC,UAAU,aAAV,EAAyB;AACxD,eAAO,cAAc,IAAd,GACF,KADE,CACI,IADJ,EAEF,GAFE,CAEE,UAAU,GAAV,EAAe;AAAE,mBAAO,IAAI,KAAJ,CAAU,GAAV,CAAP;AAAwB,SAF3C,EAGF,GAHE,CAGE,UAAU,EAAV,EAAc;AACnB,gBAAI,MAAM,GAAG,CAAH,CAAV;AAAA,gBAAiB,QAAQ,GAAG,KAAH,CAAS,CAAT,CAAzB;AACA,mBAAQ,CAAC,IAAI,IAAJ,EAAD,EAAa,MAAM,IAAN,CAAW,GAAX,EAAgB,IAAhB,EAAb,CAAR;AACH,SANM,EAOF,MAPE,CAOK,UAAU,OAAV,EAAmB,EAAnB,EAAuB;AAC/B,gBAAI,MAAM,GAAG,CAAH,CAAV;AAAA,gBAAiB,QAAQ,GAAG,CAAH,CAAzB;AACA,mBAAO,CAAC,QAAQ,GAAR,CAAY,GAAZ,EAAiB,KAAjB,CAAD,IAA4B,OAAnC;AACH,SAVM,EAUJ,IAAI,OAAJ,EAVI,CAAP;AAWH,KAZD;AAaA;;;AAGA,YAAQ,SAAR,CAAkB,MAAlB,GAA2B,UAAU,IAAV,EAAgB,KAAhB,EAAuB;AAC9C,YAAI,UAAU,KAAK,WAAL,CAAiB,GAAjB,CAAqB,IAArB,CAAd;AACA,YAAI,OAAO,aAAa,kBAAb,CAAgC,OAAhC,IAA2C,OAA3C,GAAqD,EAAhE;AACA,aAAK,IAAL,CAAU,KAAV;AACA,aAAK,WAAL,CAAiB,GAAjB,CAAqB,IAArB,EAA2B,IAA3B;AACH,KALD;AAMA;;;AAGA,YAAQ,SAAR,CAAkB,MAAlB,GAA2B,UAAU,IAAV,EAAgB;AAAE,aAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB;AAAgC,KAA7E;AACA,YAAQ,SAAR,CAAkB,OAAlB,GAA4B,UAAU,EAAV,EAAc;AACtC,aAAK,WAAL,CAAiB,OAAjB,CAAyB,EAAzB;AACH,KAFD;AAGA;;;AAGA,YAAQ,SAAR,CAAkB,GAAlB,GAAwB,UAAU,MAAV,EAAkB;AAAE,eAAO,aAAa,WAAb,CAAyB,KAAzB,CAA+B,KAAK,WAAL,CAAiB,GAAjB,CAAqB,MAArB,CAA/B,CAAP;AAAsE,KAAlH;AACA;;;AAGA,YAAQ,SAAR,CAAkB,GAAlB,GAAwB,UAAU,MAAV,EAAkB;AAAE,eAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,MAArB,CAAP;AAAsC,KAAlF;AACA;;;AAGA,YAAQ,SAAR,CAAkB,IAAlB,GAAyB,YAAY;AAAE,eAAO,aAAa,UAAb,CAAwB,IAAxB,CAA6B,KAAK,WAAlC,CAAP;AAAwD,KAA/F;AACA;;;AAGA,YAAQ,SAAR,CAAkB,GAAlB,GAAwB,UAAU,MAAV,EAAkB,KAAlB,EAAyB;AAC7C,YAAI,OAAO,EAAX;AACA,YAAI,aAAa,kBAAb,CAAgC,KAAhC,CAAJ,EAA4C;AACxC,gBAAI,YAAY,MAAM,IAAN,CAAW,GAAX,CAAhB;AACA,iBAAK,IAAL,CAAU,SAAV;AACH,SAHD,MAIK;AACD,iBAAK,IAAL,CAAU,KAAV;AACH;AACD,aAAK,WAAL,CAAiB,GAAjB,CAAqB,MAArB,EAA6B,IAA7B;AACH,KAVD;AAWA;;;AAGA,YAAQ,SAAR,CAAkB,MAAlB,GAA2B,YAAY;AAAE,eAAO,aAAa,UAAb,CAAwB,MAAxB,CAA+B,KAAK,WAApC,CAAP;AAA0D,KAAnG;AACA;;;AAGA,YAAQ,SAAR,CAAkB,MAAlB,GAA2B,YAAY;AACnC,YAAI,sBAAsB,EAA1B;AACA,aAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC7C,gBAAI,OAAO,EAAX;AACA,yBAAa,eAAb,CAA6B,MAA7B,EAAqC,UAAU,GAAV,CAAc,iBAAd,EAAiC;AAAE,uBAAO,OAAO,aAAa,WAAb,CAAyB,MAAzB,CAAgC,IAAhC,EAAsC,IAAI,KAAJ,CAAU,GAAV,CAAtC,CAAd;AAAsE,aAA9I;AACA,gCAAoB,IAApB,IAA4B,IAA5B;AACH,SAJD;AAKA,eAAO,mBAAP;AACH,KARD;AASA;;;AAGA,YAAQ,SAAR,CAAkB,MAAlB,GAA2B,UAAU,MAAV,EAAkB;AACzC,YAAI,UAAU,KAAK,WAAL,CAAiB,GAAjB,CAAqB,MAArB,CAAd;AACA,eAAO,aAAa,kBAAb,CAAgC,OAAhC,IAA2C,OAA3C,GAAqD,EAA5D;AACH,KAHD;AAIA;;;AAGA,YAAQ,SAAR,CAAkB,OAAlB,GAA4B,YAAY;AAAE,cAAM,IAAI,aAAa,aAAjB,CAA+B,sDAA/B,CAAN;AAA+F,KAAzI;AACA,WAAO,OAAP;AACH,CAtGc,EAAf;AAuGA,QAAQ,OAAR,GAAkB,OAAlB;AACA","file":"headers-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar collection_1 = require('../src/facade/collection');\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example ([live demo](http://plnkr.co/edit/MTdwT6?p=preview))\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @experimental\n */\nvar Headers = (function () {\n    function Headers(headers) {\n        var _this = this;\n        if (headers instanceof Headers) {\n            this._headersMap = headers._headersMap;\n            return;\n        }\n        this._headersMap = new collection_1.Map();\n        if (lang_1.isBlank(headers)) {\n            return;\n        }\n        // headers instanceof StringMap\n        collection_1.StringMapWrapper.forEach(headers, function (v, k) {\n            _this._headersMap.set(k, collection_1.isListLikeIterable(v) ? v : [v]);\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        return headersString.trim()\n            .split('\\n')\n            .map(function (val) { return val.split(':'); })\n            .map(function (_a) {\n            var key = _a[0], parts = _a.slice(1);\n            return ([key.trim(), parts.join(':').trim()]);\n        })\n            .reduce(function (headers, _a) {\n            var key = _a[0], value = _a[1];\n            return !headers.set(key, value) && headers;\n        }, new Headers());\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var mapName = this._headersMap.get(name);\n        var list = collection_1.isListLikeIterable(mapName) ? mapName : [];\n        list.push(value);\n        this._headersMap.set(name, list);\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) { this._headersMap.delete(name); };\n    Headers.prototype.forEach = function (fn) {\n        this._headersMap.forEach(fn);\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (header) { return collection_1.ListWrapper.first(this._headersMap.get(header)); };\n    /**\n     * Check for existence of header by given name.\n     */\n    Headers.prototype.has = function (header) { return this._headersMap.has(header); };\n    /**\n     * Provides names of set headers\n     */\n    Headers.prototype.keys = function () { return collection_1.MapWrapper.keys(this._headersMap); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (header, value) {\n        var list = [];\n        if (collection_1.isListLikeIterable(value)) {\n            var pushValue = value.join(',');\n            list.push(pushValue);\n        }\n        else {\n            list.push(value);\n        }\n        this._headersMap.set(header, list);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return collection_1.MapWrapper.values(this._headersMap); };\n    /**\n     * Returns string of all headers.\n     */\n    Headers.prototype.toJSON = function () {\n        var serializableHeaders = {};\n        this._headersMap.forEach(function (values, name) {\n            var list = [];\n            collection_1.iterateListLike(values, function (val /** TODO #9100 */) { return list = collection_1.ListWrapper.concat(list, val.split(',')); });\n            serializableHeaders[name] = list;\n        });\n        return serializableHeaders;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (header) {\n        var headers = this._headersMap.get(header);\n        return collection_1.isListLikeIterable(headers) ? headers : [];\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new exceptions_1.BaseException('\"entries\" method is not implemented on Headers class'); };\n    return Headers;\n}());\nexports.Headers = Headers;\n//# sourceMappingURL=headers.js.map"]}