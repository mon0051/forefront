{"version":3,"sources":["base_request_options.js"],"names":[],"mappings":"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","file":"base_request_options-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../src/facade/lang');\nvar enums_1 = require('./enums');\nvar headers_1 = require('./headers');\nvar http_utils_1 = require('./http_utils');\nvar url_search_params_1 = require('./url_search_params');\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @experimental\n */\nvar RequestOptions = (function () {\n    function RequestOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, withCredentials = _b.withCredentials;\n        this.method = lang_1.isPresent(method) ? http_utils_1.normalizeMethodName(method) : null;\n        this.headers = lang_1.isPresent(headers) ? headers : null;\n        this.body = lang_1.isPresent(body) ? body : null;\n        this.url = lang_1.isPresent(url) ? url : null;\n        this.search = lang_1.isPresent(search) ?\n            (lang_1.isString(search) ? new url_search_params_1.URLSearchParams((search)) : (search)) :\n            null;\n        this.withCredentials = lang_1.isPresent(withCredentials) ? withCredentials : null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: lang_1.isPresent(options) && lang_1.isPresent(options.method) ? options.method : this.method,\n            headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,\n            body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,\n            url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,\n            search: lang_1.isPresent(options) && lang_1.isPresent(options.search) ?\n                (lang_1.isString(options.search) ? new url_search_params_1.URLSearchParams((options.search)) :\n                    (options.search).clone()) :\n                this.search,\n            withCredentials: lang_1.isPresent(options) && lang_1.isPresent(options.withCredentials) ?\n                options.withCredentials :\n                this.withCredentials\n        });\n    };\n    return RequestOptions;\n}());\nexports.RequestOptions = RequestOptions;\nvar BaseRequestOptions = (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        _super.call(this, { method: enums_1.RequestMethod.Get, headers: new headers_1.Headers() });\n    }\n    /** @nocollapse */\n    BaseRequestOptions.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    BaseRequestOptions.ctorParameters = [];\n    return BaseRequestOptions;\n}(RequestOptions));\nexports.BaseRequestOptions = BaseRequestOptions;\n//# sourceMappingURL=base_request_options.js.map"]}