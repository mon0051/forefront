{"version":3,"sources":["http.js"],"names":[],"mappings":"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","file":"http-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar base_request_options_1 = require('./base_request_options');\nvar enums_1 = require('./enums');\nvar interfaces_1 = require('./interfaces');\nvar static_request_1 = require('./static_request');\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (lang_1.isPresent(providedOpts)) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new base_request_options_1.RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials\n        }));\n    }\n    if (lang_1.isPresent(method)) {\n        return newOptions.merge(new base_request_options_1.RequestOptions({ method: method, url: url }));\n    }\n    else {\n        return newOptions.merge(new base_request_options_1.RequestOptions({ url: url }));\n    }\n}\nvar Http = (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (lang_1.isString(url)) {\n            responseObservable = httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));\n        }\n        else if (url instanceof static_request_1.Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({ body: body })), options, enums_1.RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Head, url)));\n    };\n    /** @nocollapse */\n    Http.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    Http.ctorParameters = [\n        { type: interfaces_1.ConnectionBackend, },\n        { type: base_request_options_1.RequestOptions, },\n    ];\n    return Http;\n}());\nexports.Http = Http;\nvar Jsonp = (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        _super.call(this, backend, defaultOptions);\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (lang_1.isString(url)) {\n            url =\n                new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethod.Get, url));\n        }\n        if (url instanceof static_request_1.Request) {\n            if (url.method !== enums_1.RequestMethod.Get) {\n                exceptions_1.makeTypeError('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /** @nocollapse */\n    Jsonp.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    Jsonp.ctorParameters = [\n        { type: interfaces_1.ConnectionBackend, },\n        { type: base_request_options_1.RequestOptions, },\n    ];\n    return Jsonp;\n}(Http));\nexports.Jsonp = Jsonp;\n//# sourceMappingURL=http.js.map"]}