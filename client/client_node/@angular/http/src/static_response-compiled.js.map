{"version":3,"sources":["static_response.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AACA,IAAI,eAAe,QAAQ,0BAAR,CAAnB;AACA,IAAI,SAAS,QAAQ,oBAAR,CAAb;AACA,IAAI,eAAe,QAAQ,cAAR,CAAnB;AACA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAI,WAAY,YAAY;AACxB,aAAS,QAAT,CAAkB,eAAlB,EAAmC;AAC/B,aAAK,KAAL,GAAa,gBAAgB,IAA7B;AACA,aAAK,MAAL,GAAc,gBAAgB,MAA9B;AACA,aAAK,EAAL,GAAW,KAAK,MAAL,IAAe,GAAf,IAAsB,KAAK,MAAL,IAAe,GAAhD;AACA,aAAK,UAAL,GAAkB,gBAAgB,UAAlC;AACA,aAAK,OAAL,GAAe,gBAAgB,OAA/B;AACA,aAAK,IAAL,GAAY,gBAAgB,IAA5B;AACA,aAAK,GAAL,GAAW,gBAAgB,GAA3B;AACH;AACD;;;AAGA;AACA,aAAS,SAAT,CAAmB,IAAnB,GAA0B,YAAY;AAAE,cAAM,IAAI,aAAa,aAAjB,CAA+B,wDAA/B,CAAN;AAAiG,KAAzI;AACA;;;AAGA,aAAS,SAAT,CAAmB,IAAnB,GAA0B,YAAY;AAClC,YAAI,YAAJ;AACA,YAAI,aAAa,UAAb,CAAwB,KAAK,KAA7B,CAAJ,EAAyC;AACrC,2BAAe,KAAK,KAApB;AACH,SAFD,MAGK,IAAI,OAAO,QAAP,CAAgB,KAAK,KAArB,CAAJ,EAAiC;AAClC,2BAAe,OAAO,IAAP,CAAY,KAAZ,CAAkB,KAAK,KAAvB,CAAf;AACH;AACD,eAAO,YAAP;AACH,KATD;AAUA;;;AAGA,aAAS,SAAT,CAAmB,IAAnB,GAA0B,YAAY;AAAE,eAAO,KAAK,KAAL,CAAW,QAAX,EAAP;AAA+B,KAAvE;AACA;;;AAGA;AACA,aAAS,SAAT,CAAmB,WAAnB,GAAiC,YAAY;AACzC,cAAM,IAAI,aAAa,aAAjB,CAA+B,+DAA/B,CAAN;AACH,KAFD;AAGA,aAAS,SAAT,CAAmB,QAAnB,GAA8B,YAAY;AACtC,eAAO,2BAA2B,KAAK,MAAhC,GAAyC,GAAzC,GAA+C,KAAK,UAApD,GAAiE,YAAjE,GAAgF,KAAK,GAA5F;AACH,KAFD;AAGA,WAAO,QAAP;AACH,CA3Ce,EAAhB;AA4CA,QAAQ,QAAR,GAAmB,QAAnB;AACA","file":"static_response-compiled.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../src/facade/exceptions');\nvar lang_1 = require('../src/facade/lang');\nvar http_utils_1 = require('./http_utils');\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @experimental\n */\nvar Response = (function () {\n    function Response(responseOptions) {\n        this._body = responseOptions.body;\n        this.status = responseOptions.status;\n        this.ok = (this.status >= 200 && this.status <= 299);\n        this.statusText = responseOptions.statusText;\n        this.headers = responseOptions.headers;\n        this.type = responseOptions.type;\n        this.url = responseOptions.url;\n    }\n    /**\n     * Not yet implemented\n     */\n    // TODO: Blob return type\n    Response.prototype.blob = function () { throw new exceptions_1.BaseException('\"blob()\" method not implemented on Response superclass'); };\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Response.prototype.json = function () {\n        var jsonResponse;\n        if (http_utils_1.isJsObject(this._body)) {\n            jsonResponse = this._body;\n        }\n        else if (lang_1.isString(this._body)) {\n            jsonResponse = lang_1.Json.parse(this._body);\n        }\n        return jsonResponse;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     */\n    Response.prototype.text = function () { return this._body.toString(); };\n    /**\n     * Not yet implemented\n     */\n    // TODO: ArrayBuffer return type\n    Response.prototype.arrayBuffer = function () {\n        throw new exceptions_1.BaseException('\"arrayBuffer()\" method not implemented on Response superclass');\n    };\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}());\nexports.Response = Response;\n//# sourceMappingURL=static_response.js.map"]}